-- Inicializa a OrionLib
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Player HUB",
    Icon = 0,
    LoadingTitle = "By Bomzinho",
    LoadingSubtitle = "Loading...",
    Theme = "Amethyst",

    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,

    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "ESPP"
    },

    Discord = {
        Enabled = false,
        Invite = "",
        RememberJoins = true
    },

    KeySystem = true,
    KeySettings = {
        Title = "PLAYER HUB",
        Subtitle = "Key System",
        Note = "No method of obtaining the key is provided",
        FileName = "Key",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"yh776"}
    }
})

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Função para atualizar a velocidade do jogador
local function updateSpeed(speedValue)
    humanoid.WalkSpeed = speedValue
end

-- Função para atualizar o jump power do jogador
local function updateJumpPower(jumpValue)
    humanoid.JumpPower = jumpValue
end

-- Função para resetar o jump power para o valor padrão
local function resetJumpPower()
    humanoid.JumpPower = 50 -- valor padrão do jump power
end

-- Função para alternar o Infinite Jump (modo pulo infinito)
local function toggleInfiniteJump(enable)
    if enable then
        humanoid.JumpHeight = 100  -- Pulo infinito
        humanoid.MaxSlope = 0
    else
        humanoid.JumpHeight = 50  -- Valor padrão
        humanoid.MaxSlope = 45
    end
end

-- Criando o menu com OrionLib

local tab = Window:CreateTab("Configs", 4483362458)

-- Slider para controlar a velocidade do jogador
tab:CreateSlider({
    Name = "Walk Speed",
    Range = {16, 100},
    Increment = 1,
    Suffix = "",
    CurrentValue = humanoid.WalkSpeed,
    Flag = "Fov Transparency",
    Callback = function(Value)
        updateSpeed(Value)
    end,
})

tab:CreateSlider({
    Name = "Jump Power",
    Range = {50, 200},
    Increment = 1,
    Suffix = "",
    CurrentValue = humanoid.JumpPower,
    Flag = "Fov Transparency",
    Callback = function(Value)
        updateJumpPower(Value)
    end,
})

tab:CreateToggle({
    Name = "Reset Jump Power",
    Flag = "Enable Aimbot",
    Callback = function()
        resetJumpPower()
        jumpSlider:Set(50)
    end,
})

tab:CreateToggle({
    Name = "Reset Speed",
    Flag = "Enable Aimbot",
    Callback = function()
        resetJumpPower()
        speedSlider:Set(16)
    end,
})

local infj = false
game:GetService("UserInputService").JumpRequest:Connect(function()
	if infj then
		game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
	end
end)

tab:CreateToggle({
    Name = "Inf Jump",
    CurrentValue = false,
    Flag = "Enable Aimbot",
    Callback = function(Value)
        infj = Value
    end,
})

tab:CreateToggle({
    Name = "Noclip",
    CurrentValue = false,
    Flag = "Enable Aimbot",
    Callback = function(Value)
    	noclip = Value
    end,
})

noclip = false
game:GetService('RunService').Stepped:connect(function()
if noclip then
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end
end)
plr = game.Players.LocalPlayer
 

if noclip then
    game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end
