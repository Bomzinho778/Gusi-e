local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Orion/main/source'))()
local Window = OrionLib:MakeWindow({Name = "ESP Settings", HidePremium = false, SaveConfig = true, ConfigFolder = "ESPConfig"})

local ESP = {
    Box = false,
    BoxThickness = 2,
    BoxTransparency = 1,
    BoxColor = Color3.new(1, 1, 1),

    Tracers = false,
    TracerThickness = 1,
    TracerTransparency = 1,
    TracerColor = Color3.new(1, 0, 0),

    Name = false,
    NameSize = 20,
    NameColor = Color3.new(1, 1, 0),

    Skeleton = false,
    SkeletonThickness = 1,
    SkeletonTransparency = 1,
    SkeletonColor = Color3.new(0, 1, 0),

    HealthBars = false,
    HealthBarThickness = 2,
    HealthBarTransparency = 1,
    HealthBarColor = Color3.new(0, 1, 0),

    HeadDots = false,
    HeadDotThickness = 2,
    HeadDotTransparency = 1,
    HeadDotColor = Color3.new(1, 0, 0),

    LookTracers = false,
    LookTracerThickness = 1,
    LookTracerTransparency = 1,
    LookTracerColor = Color3.new(0, 0, 1)
}

local playerESP = {}

local function updateESP(player)
    local espData = playerESP[player]
    if espData then
        espData.box.Thickness = ESP.BoxThickness
        espData.box.Transparency = ESP.BoxTransparency
        espData.box.Color = ESP.BoxColor

        espData.tracer.Thickness = ESP.TracerThickness
        espData.tracer.Transparency = ESP.TracerTransparency
        espData.tracer.Color = ESP.TracerColor

        espData.name.Size = ESP.NameSize
        espData.name.Color = ESP.NameColor

        espData.skeleton.Thickness = ESP.SkeletonThickness
        espData.skeleton.Transparency = ESP.SkeletonTransparency
        espData.skeleton.Color = ESP.SkeletonColor

        espData.healthBar.Thickness = ESP.HealthBarThickness
        espData.healthBar.Transparency = ESP.HealthBarTransparency
        espData.healthBar.Color = ESP.HealthBarColor

        espData.headDot.Thickness = ESP.HeadDotThickness
        espData.headDot.Transparency = ESP.HeadDotTransparency
        espData.headDot.Color = ESP.HeadDotColor

        espData.lookTracer.Thickness = ESP.LookTracerThickness
        espData.lookTracer.Transparency = ESP.LookTracerTransparency
        espData.lookTracer.Color = ESP.LookTracerColor
    end
end

local function createESP(player)
    local character = player.Character
    if not character then return end

    local box = Drawing.new("Square")
    box.Visible = ESP.Box
    box.Thickness = ESP.BoxThickness
    box.Transparency = ESP.BoxTransparency
    box.Color = ESP.BoxColor

    local tracer = Drawing.new("Line")
    tracer.Visible = ESP.Tracers
    tracer.Thickness = ESP.TracerThickness
    tracer.Transparency = ESP.TracerTransparency
    tracer.Color = ESP.TracerColor

    local name = Drawing.new("Text")
    name.Visible = ESP.Name
    name.Text = player.Name
    name.Color = ESP.NameColor
    name.Size = ESP.NameSize
    name.Center = true
    name.Outline = true

    local skeleton = Drawing.new("Line")
    skeleton.Visible = ESP.Skeleton
    skeleton.Thickness = ESP.SkeletonThickness
    skeleton.Transparency = ESP.SkeletonTransparency
    skeleton.Color = ESP.SkeletonColor

    local healthBar = Drawing.new("Square")
    healthBar.Visible = ESP.HealthBars
    healthBar.Thickness = ESP.HealthBarThickness
    healthBar.Transparency = ESP.HealthBarTransparency
    healthBar.Color = ESP.HealthBarColor

    local headDot = Drawing.new("Circle")
    headDot.Visible = ESP.HeadDots
    headDot.Thickness = ESP.HeadDotThickness
    headDot.Transparency = ESP.HeadDotTransparency
    headDot.Color = ESP.HeadDotColor

    local lookTracer = Drawing.new("Line")
    lookTracer.Visible = ESP.LookTracers
    lookTracer.Thickness = ESP.LookTracerThickness
    lookTracer.Transparency = ESP.LookTracerTransparency
    lookTracer.Color = ESP.LookTracerColor

    playerESP[player] = {
        box = box,
        tracer = tracer,
        name = name,
        skeleton = skeleton,
        healthBar = healthBar,
        headDot = headDot,
        lookTracer = lookTracer
    }

    game:GetService("RunService").RenderStepped:Connect(function()
        if character and character:FindFirstChild("HumanoidRootPart") then
            local rootPart = character.HumanoidRootPart
            local head = character:FindFirstChild("Head")

            local rootPos, onScreen = workspace.CurrentCamera:WorldToViewportPoint(rootPart.Position)
            local headPos = workspace.CurrentCamera:WorldToViewportPoint(head.Position)

            if onScreen then
                box.Size = Vector2.new(2000 / rootPos.Z, 3000 / rootPos.Z)
                box.Position = Vector2.new(rootPos.X - box.Size.X / 2, rootPos.Y - box.Size.Y / 2)
                box.Visible = ESP.Box

                tracer.From = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y)
                tracer.To = Vector2.new(rootPos.X, rootPos.Y)
                tracer.Visible = ESP.Tracers

                name.Position = Vector2.new(rootPos.X, rootPos.Y - box.Size.Y / 2 - 20)
                name.Visible = ESP.Name

                skeleton.From = Vector2.new(rootPos.X, rootPos.Y)
                skeleton.To = Vector2.new(headPos.X, headPos.Y)
                skeleton.Visible = ESP.Skeleton

                healthBar.Size = Vector2.new(5, box.Size.Y * (character.Humanoid.Health / character.Humanoid.MaxHealth))
                healthBar.Position = Vector2.new(box.Position.X - 10, box.Position.Y + box.Size.Y - healthBar.Size.Y)
                healthBar.Visible = ESP.HealthBars

                headDot.Position = Vector2.new(headPos.X, headPos.Y)
                headDot.Radius = 5
                headDot.Visible = ESP.HeadDots

                lookTracer.From = Vector2.new(rootPos.X, rootPos.Y)
                lookTracer.To = Vector2.new(rootPos.X + rootPart.CFrame.LookVector.X * 50, rootPos.Y + rootPart.CFrame.LookVector.Y * 50)
                lookTracer.Visible = ESP.LookTracers
            else
                box.Visible = false
                tracer.Visible = false
                name.Visible = false
                skeleton.Visible = false
                healthBar.Visible = false
                headDot.Visible = false
                lookTracer.Visible = false
            end
        else
            removeESP(player)
        end
    end)
end

game:GetService("Players").PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        createESP(player)
    end)
end)

game:GetService("Players").PlayerRemoving:Connect(function(player)
    removeESP(player)
end)

-- GUI para Box ESP
local ESPBox = Window:MakeTab({
    Name = "Box ESP",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

ESPBox:AddToggle({
    Name = "Enable Box ESP",
    Default = false,
    Callback = function(value)
        ESP.Box = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

ESPBox:AddSlider({
    Name = "Box Thickness",
    Min = 1,
    Max = 10,
    Default = 2,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    ValueName = "Thickness",
    Callback = function(value)
        ESP.BoxThickness = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

ESPBox:AddSlider({
    Name = "Box Transparency",
    Min = 0,
    Max = 1,
    Default = 1,
    Color = Color3.fromRGB(255,255,255),
    Increment = 0.1,
    ValueName = "Transparency",
    Callback = function(value)
        ESP.BoxTransparency = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

ESPBox:AddColorPicker({
    Name = "Box Color",
    Default = Color3.fromRGB(255, 255, 255),
    Callback = function(value)
        ESP.BoxColor = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

-- GUI para Tracers ESP
local ESPTracers = Window:MakeTab({
    Name = "Tracers ESP",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

ESPTracers:AddToggle({
    Name = "Enable Tracers ESP",
    Default = false,
    Callback = function(value)
        ESP.Tracers = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

ESPTracers:AddSlider({
    Name = "Tracer Thickness",
    Min = 1,
    Max = 10,
    Default = 1,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    ValueName = "Thickness",
    Callback = function(value)
        ESP.TracerThickness = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

ESPTracers:AddSlider({
    Name = "Tracer Transparency",
    Min = 0,
    Max = 1,
    Default = 1,
    Color = Color3.fromRGB(255,255,255),
    Increment = 0.1,
    ValueName = "Transparency",
    Callback = function(value)
        ESP.TracerTransparency = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

ESPTracers:AddColorPicker({
    Name = "Tracer Color",
    Default = Color3.fromRGB(255, 0, 0),
    Callback = function(value)
        ESP.TracerColor = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

-- GUI para Name ESP
local ESPName = Window:MakeTab({
    Name = "Name ESP",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

ESPName:AddToggle({
    Name = "Enable Name ESP",
    Default = false,
    Callback = function(value)
        ESP.Name = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

ESPName:AddSlider({
    Name = "Name Size",
    Min = 10,
    Max = 30,
    Default = 20,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    ValueName = "Size",
    Callback = function(value)
        ESP.NameSize = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

ESPName:AddColorPicker({
    Name = "Name Color",
    Default = Color3.fromRGB(255, 255, 0),
    Callback = function(value)
        ESP.NameColor = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

-- GUI para Skeleton ESP
local ESPSkeleton = Window:MakeTab({
    Name = "Skeleton ESP",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

ESPSkeleton:AddToggle({
    Name = "Enable Skeleton ESP",
    Default = false,
    Callback = function(value)
        ESP.Skeleton = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

ESPSkeleton:AddSlider({
    Name = "Skeleton Thickness",
    Min = 1,
    Max = 10,
    Default = 1,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    ValueName = "Thickness",
    Callback = function(value)
        ESP.SkeletonThickness = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

ESPSkeleton:AddSlider({
    Name = "Skeleton Transparency",
    Min = 0,
    Max = 1,
    Default = 1,
    Color = Color3.fromRGB(255,255,255),
    Increment = 0.1,
    ValueName = "Transparency",
    Callback = function(value)
        ESP.SkeletonTransparency = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

ESPSkeleton:AddColorPicker({
    Name = "Skeleton Color",
    Default = Color3.fromRGB(0, 255, 0),
    Callback = function(value)
        ESP.SkeletonColor = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

-- GUI para Health Bars
local ESPHealthBars = Window:MakeTab({
    Name = "Health Bars",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

ESPHealthBars:AddToggle({
    Name = "Enable Health Bars",
    Default = false,
    Callback = function(value)
        ESP.HealthBars = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

ESPHealthBars:AddSlider({
    Name = "Health Bar Thickness",
    Min = 1,
    Max = 10,
    Default = 2,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    ValueName = "Thickness",
    Callback = function(value)
        ESP.HealthBarThickness = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

ESPHealthBars:AddSlider({
    Name = "Health Bar Transparency",
    Min = 0,
    Max = 1,
    Default = 1,
    Color = Color3.fromRGB(255,255,255),
    Increment = 0.1,
    ValueName = "Transparency",
    Callback = function(value)
        ESP.HealthBarTransparency = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

ESPHealthBars:AddColorPicker({
    Name = "Health Bar Color",
    Default = Color3.fromRGB(0, 255, 0),
    Callback = function(value)
        ESP.HealthBarColor = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

-- GUI para Head Dots
local ESPHeadDots = Window:MakeTab({
    Name = "Head Dots",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

ESPHeadDots:AddToggle({
    Name = "Enable Head Dots",
    Default = false,
    Callback = function(value)
        ESP.HeadDots = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

ESPHeadDots:AddSlider({
    Name = "Head Dot Thickness",
    Min = 1,
    Max = 10,
    Default = 2,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    ValueName = "Thickness",
    Callback = function(value)
        ESP.HeadDotThickness = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

ESPHeadDots:AddSlider({
    Name = "Head Dot Transparency",
    Min = 0,
    Max = 1,
    Default = 1,
    Color = Color3.fromRGB(255,255,255),
    Increment = 0.1,
    ValueName = "Transparency",
    Callback = function(value)
        ESP.HeadDotTransparency = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

ESPHeadDots:AddColorPicker({
    Name = "Head Dot Color",
    Default = Color3.fromRGB(255, 0, 0),
    Callback = function(value)
        ESP.HeadDotColor = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

-- GUI para Look Tracers
local ESPLookTracers = Window:MakeTab({
    Name = "Look Tracers",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

ESPLookTracers:AddToggle({
    Name = "Enable Look Tracers",
    Default = false,
    Callback = function(value)
        ESP.LookTracers = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

ESPLookTracers:AddSlider({
    Name = "Look Tracer Thickness",
    Min = 1,
    Max = 10,
    Default = 1,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    ValueName = "Thickness",
    Callback = function(value)
        ESP.LookTracerThickness = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

ESPLookTracers:AddSlider({
    Name = "Look Tracer Transparency",
    Min = 0,
    Max = 1,
    Default = 1,
    Color = Color3.fromRGB(255,255,255),
    Increment = 0.1,
    ValueName = "Transparency",
    Callback = function(value)
        ESP.LookTracerTransparency = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

ESPLookTracers:AddColorPicker({
    Name = "Look Tracer Color",
    Default = Color3.fromRGB(0, 0, 255),
    Callback = function(value)
        ESP.LookTracerColor = value
        for _, player in pairs(game:GetService("Players"):GetPlayers()) do
            updateESP(player)
        end
    end
})

-- Inicializando o OrionLib
OrionLib:Init()
