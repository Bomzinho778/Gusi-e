local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local VirtualInputManager = game:GetService("VirtualInputManager")
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Player = Players.LocalPlayer
local FOV_RADIUS = 350
local FOV_CIRCLE_COLOR = Color3.new(1, 1, 1)
local FOV_CIRCLE_TRANSPARENCY = 0.5
local Parried = false
local LastParryTime = 0
local ParryCooldown = 0
local AutoParryEnabled = true

local FOVCircle = Drawing.new("Circle")
FOVCircle.Transparency = FOV_CIRCLE_TRANSPARENCY
FOVCircle.Visible = true
FOVCircle.Thickness = 2
FOVCircle.Filled = false
FOVCircle.Color = FOV_CIRCLE_COLOR
FOVCircle.Radius = FOV_RADIUS

local function UpdateFOVCircle()
    local ViewportSize = workspace.CurrentCamera.ViewportSize
    FOVCircle.Position = Vector2.new(ViewportSize.X / 2, ViewportSize.Y / 2)
end

local function IsInFOV(ball)
    local ScreenPos, OnScreen = workspace.CurrentCamera:WorldToViewportPoint(ball.Position)
    if not OnScreen then
        return false
    end
    local Center = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2)
    local Distance = (Vector2.new(ScreenPos.X, ScreenPos.Y) - Center).Magnitude
    return Distance <= FOV_RADIUS
end

local function GetBall()
    for _, ball in ipairs(workspace.Balls:GetChildren()) do
        if ball:GetAttribute("realBall") then
            return ball
        end
    end
    return nil
end

local function onCharacterAdded(newCharacter)
    repeat wait() until newCharacter:FindFirstChild("HumanoidRootPart")

    Parried = false
    LastParryTime = tick()
end

Player.CharacterAdded:Connect(onCharacterAdded)

local Window = Rayfield:CreateWindow({
    Name = "GM HUB",
    Icon = 0,
    LoadingTitle = "By Bomzinho",
    LoadingSubtitle = "Loading...",
    Theme = "Amethyst",

    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,

    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "EkSPP"
    },

    Discord = {
        Enabled = false,
        Invite = "",
        RememberJoins = true
    },

    KeySystem = true,
    KeySettings = {
        Title = "GM HUB",
        Subtitle = "Key System",
        Note = "No method of obtaining the key is provided",
        FileName = "Key",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"yh77k6"}
    }
})

local tab = Window:CreateTab("Configs", 4483362458)

tab:CreateSlider({
    Name = "Fov Size",
    Range = {50, 1000},
    Increment = 1,
    Suffix = "",
    CurrentValue = 350,
    Flag = "Fov Transparency",
    Callback = function(Value)
        FOV_RADIUS = Value
    	FOVCircle.Radius = FOV_RADIUS
    end,
})

tab:CreateToggle({
    Name = "Auto Parry",
    CurrentValue = false,
    Flag = "Enable Aimbot",
    Callback = function(Value)
        AutoParryEnabled = Value
    end,
})

RunService.Heartbeat:Connect(function()
    UpdateFOVCircle()

    local Ball = GetBall()
    local HRP = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")

    if Ball and HRP then
        local Speed = Ball.AssemblyLinearVelocity.Magnitude
        local Distance = (HRP.Position - Ball.Position).Magnitude

        local TimeToHit = Speed > 0 and Distance / Speed or math.huge

        if AutoParryEnabled and Ball:GetAttribute("target") == Player.Name and TimeToHit <= 0.55 and IsInFOV(Ball) then
            if not Parried and (tick() - LastParryTime) >= ParryCooldown then
                VirtualInputManager:SendTouchEvent(0, 0, true, game, 0)
                VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
		VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.F, false, game)
                Parried = true
                LastParryTime = tick()
                print("Parry realizado!")
            end
        end

        if Parried and (tick() - LastParryTime) >= 0.5 then
            Parried = false
        end
    end
end)
