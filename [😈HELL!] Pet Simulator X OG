local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local VirtualInputManager = game:GetService("VirtualInputManager")

local Player = Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()

local FOV_RADIUS = 200 -- Tamanho do FOV em pixels
local FOV_CIRCLE_COLOR = Color3.new(1, 0, 0) -- Cor do círculo do FOV (vermelho)
local FOV_CIRCLE_TRANSPARENCY = 0.5 -- Transparência do círculo do FOV

local Parried = false
local Cooldown = tick()

-- Desenha o círculo de FOV
local FOVCircle = Drawing.new("Circle")
FOVCircle.Transparency = FOV_CIRCLE_TRANSPARENCY
FOVCircle.Visible = true
FOVCircle.Thickness = 2
FOVCircle.Filled = false
FOVCircle.Color = FOV_CIRCLE_COLOR
FOVCircle.Radius = FOV_RADIUS

-- Atualiza a posição do círculo no centro da tela
RunService.RenderStepped:Connect(function()
    local ViewportSize = workspace.CurrentCamera.ViewportSize
    FOVCircle.Position = Vector2.new(ViewportSize.X / 2, ViewportSize.Y / 2)
end)

-- Função para calcular se a bola está dentro do FOV
local function IsInFOV(ball)
    local ScreenPos, OnScreen = workspace.CurrentCamera:WorldToViewportPoint(ball.Position)
    if not OnScreen then
        return false
    end
    local Center = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2)
    local Distance = (Vector2.new(ScreenPos.X, ScreenPos.Y) - Center).Magnitude
    return Distance <= FOV_RADIUS
end

-- Função para pegar a bola correta
local function GetBall()
    for _, ball in ipairs(workspace.Balls:GetChildren()) do
        if ball:GetAttribute("realBall") then
            return ball
        end
    end
end

-- Loop principal
RunService.Heartbeat:Connect(function()
    local Ball = GetBall()
    local HRP = Character:FindFirstChild("HumanoidRootPart")
    
    if Ball and HRP then
        local Speed = Ball.AssemblyLinearVelocity.Magnitude
        local Distance = (HRP.Position - Ball.Position).Magnitude
        local TimeToHit = Distance / Speed

        -- Verifica condições para realizar o parry
        if not Parried and Ball:GetAttribute("target") == Player.Name and TimeToHit <= 0.55 and IsInFOV(Ball) then
            VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
            Parried = true
            Cooldown = tick()
        end

        -- Reseta o parry após 1 segundo
        if Parried and (tick() - Cooldown) >= 1 then
            Parried = false
        end
    end
end)
