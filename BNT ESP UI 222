local plrs = game:GetService("Players")
local plr = plrs.LocalPlayer
local camera = game:GetService("Workspace").CurrentCamera
local userInputService = game:GetService("UserInputService")
local tool = plr:WaitForChild("Backpack"):WaitForChild("YourToolName")

local isToolEquipped = false

function notBehindWall(target)
    local ray = Ray.new(plr.Character.Head.Position, (target.Position - plr.Character.Head.Position).Unit * 300)
    local part, position = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, {plr.Character}, false, true)
    if part then
        local humanoid = part.Parent:FindFirstChildOfClass("Humanoid")
        if not humanoid then
            humanoid = part.Parent.Parent:FindFirstChildOfClass("Humanoid")
        end
        if humanoid and target and humanoid.Parent == target.Parent then
            local pos, visible = camera:WorldToScreenPoint(target.Position)
            if visible then
                return true
            end
        end
    end
    return false
end

function getPlayerClosestToClickPosition(targetPos)
    local target = nil
    local closestDist = math.huge
    for _, v in pairs(plrs:GetPlayers()) do
        if v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health > 0 and v.Character:FindFirstChild("HumanoidRootPart") and v.TeamColor ~= plr.TeamColor then
            local pos, vis = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
            local dist = (targetPos - Vector2.new(pos.X, pos.Y)).magnitude
            if dist < closestDist and vis then
                local torsoPos = camera:WorldToViewportPoint(v.Character.Head.Position)
                local torsoDist = (targetPos - Vector2.new(torsoPos.X, torsoPos.Y)).magnitude
                local headPos = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                local headDist = (targetPos - Vector2.new(headPos.X, headPos.Y)).magnitude
                if torsoDist > headDist then
                    if notBehindWall(v.Character.Head) then
                        target = v.Character.Head
                    end
                else
                    if notBehindWall(v.Character.HumanoidRootPart) then
                        target = v.Character.HumanoidRootPart
                    end
                end
                closestDist = dist
            end
        end
    end
    return target
end

userInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if gameProcessedEvent then return end
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        if isToolEquipped then
            local targetPos = input.Position
            local target = getPlayerClosestToClickPosition(targetPos)
            
            if target then
                local ray = Ray.new(plr.Character.Head.Position, (target.Position - plr.Character.Head.Position).Unit * 1000)
                local part, position = game:GetService("Workspace"):FindPartOnRay(ray)
                if part then
                    local hitHumanoid = part.Parent:FindFirstChildOfClass("Humanoid")
                    if hitHumanoid then
                        hitHumanoid:TakeDamage(10)
                        print("Tiro acertou: " .. hitHumanoid.Parent.Name)
                    end
                end
            end
        end
    end
end)

tool.Equipped:Connect(function()
    isToolEquipped = true
end)

tool.Unequipped:Connect(function()
    isToolEquipped = false
end)
