local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Orion/main/source"))()

local dwRunService = game:GetService("RunService")
local dwEntities = game:GetService("Players")
local dwCamera = workspace.CurrentCamera
local dwLocalPlayer = dwEntities.LocalPlayer
local dwMouse = dwLocalPlayer:GetMouse()

local settings = {
    Aimbot = false,
    Aimbot_AimPart = "Head",
    Aimbot_TeamCheck = false,
    Aimbot_Draw_Fov = false,
    Aimbot_Fov_Size = 75,
    Aimbot_Fov_Color = Color3.fromRGB(255, 255, 255),
    Aimbot_Fov_Transparency = 1,
    Aimbot_Fov_Thickness = 1,
    Aimbot_Fov_Filled = false
}

local Window = OrionLib:MakeWindow({Name = "Aimbot Script", HidePremium = true, SaveConfig = true, ConfigFolder = "AimbotConfig"})

local AimbotTab = Window:MakeTab({
    Name = "Aimbot Settings",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

AimbotTab:AddToggle({
    Name = "Enable Aimbot",
    Default = false,
    Callback = function(value)
        settings.Aimbot = value
    end
})

AimbotTab:AddToggle({
    Name = "Team Check",
    Default = false,
    Callback = function(value)
        settings.Aimbot_TeamCheck = value
    end
})

AimbotTab:AddDropdown({
    Name = "Aim Part",
    Default = "Head",
    Options = {"Head", "Humanoid"},
    Callback = function(value)
        settings.Aimbot_AimPart = value
    end
})

AimbotTab:AddSlider({
    Name = "FOV Size",
    Min = 25,
    Max = 200,
    Default = 75,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    Callback = function(value)
        settings.Aimbot_Fov_Size = value
    end
})

AimbotTab:AddSlider({
    Name = "FOV Thickness",
    Min = 1,
    Max = 10,
    Default = 1,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 0.1,
    Callback = function(value)
        settings.Aimbot_Fov_Thickness = value
    end
})

AimbotTab:AddSlider({
    Name = "FOV Transparency",
    Min = 0,
    Max = 1,
    Default = 1,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 0.1,
    Callback = function(value)
        settings.Aimbot_Fov_Transparency = value
    end
})

AimbotTab:AddToggle({
    Name = "Show FOV",
    Default = false,
    Callback = function(value)
        settings.Aimbot_Draw_Fov = value
    end
})

local fovcircle = Drawing.new("Circle")
fovcircle.Visible = settings.Aimbot_Draw_Fov
fovcircle.Radius = settings.Aimbot_Fov_Size
fovcircle.Color = settings.Aimbot_Fov_Color
fovcircle.Filled = settings.Aimbot_Fov_Filled
fovcircle.Thickness = settings.Aimbot_Fov_Thickness
fovcircle.Transparency = settings.Aimbot_Fov_Transparency
fovcircle.Position = Vector2.new(dwCamera.ViewportSize.X / 2, dwCamera.ViewportSize.Y / 2)

dwRunService.RenderStepped:Connect(function()
    fovcircle.Position = Vector2.new(dwCamera.ViewportSize.X / 2, dwCamera.ViewportSize.Y / 2)
    fovcircle.Radius = settings.Aimbot_Fov_Size
    fovcircle.Color = settings.Aimbot_Fov_Color
    fovcircle.Thickness = settings.Aimbot_Fov_Thickness
    fovcircle.Transparency = settings.Aimbot_Fov_Transparency
    fovcircle.Filled = settings.Aimbot_Fov_Filled

    if settings.Aimbot then
        local closest_distance = math.huge
        local closest_character = nil

        for _, player in pairs(dwEntities:GetPlayers()) do
            if player ~= dwLocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character:FindFirstChild("Humanoid") then
                local humanoid = player.Character:FindFirstChild("Humanoid")
                local teamCheckPassed = settings.Aimbot_TeamCheck == false or player.Team ~= dwLocalPlayer.Team

                if humanoid.Health > 0 and teamCheckPassed then
                    local aim_part = player.Character:FindFirstChild(settings.Aimbot_AimPart)
                    if aim_part then
                        local part_position, is_on_screen = dwCamera:WorldToViewportPoint(aim_part.Position)
                        
                        if is_on_screen then
                            local distance = (Vector2.new(dwMouse.X, dwMouse.Y) - Vector2.new(part_position.X, part_position.Y)).Magnitude
                            if distance < closest_distance and distance < settings.Aimbot_Fov_Size then
                                closest_distance = distance
                                closest_character = player
                            end
                        end
                    end
                end
            end
        end

        if closest_character then
            local aim_part = closest_character.Character:FindFirstChild(settings.Aimbot_AimPart)
            if aim_part then
                dwCamera.CFrame = CFrame.new(dwCamera.CFrame.Position, aim_part.Position)
            end
        end
    end
end)

OrionLib:Init()
