local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local lplr = game.Players.LocalPlayer
local camera = game:GetService("Workspace").CurrentCamera
local currentCamera = workspace.CurrentCamera
local worldToViewportPoint = currentCamera.worldToViewportPoint

local HeadOff = Vector3.new(0, 0.5, 0)
local LegOff = Vector3.new(0, 3, 0)

_G.temcheck = false
_G.temcheckmode = "colors"
_G.teamcolor = Color3.new(0, 1, 0)
_G.enemycolor = Color3.new(1, 0, 0)

_G.boxColor = Color3.new(0, 0, 0)
_G.boxThickness = 1
_G.boxTransparency = 1
_G.boxVisible = false

_G.boxFilledColor = Color3.new(0, 0, 0)
_G.boxFilledTransparency = 0.5
_G.boxFilledVisible = false

_G.HealthBarThickness = 1
_G.HealthBarVisible = false
_G.HealthBarTransparency = 1
_G.HealthBarColor = Color3.new(0, 1, 0)
_G.HealthBarFilled = true

_G.HealthBarPosition = "Left"

_G.TracerVisible = false
_G.TracerThickness = 1.5
_G.TracerTransparency = 1
_G.TracerColor = Color3.new(0, 0, 0)

_G.TracerFrom = "Bottom"

--Skeleton
local camera = workspace.CurrentCamera
local entities = game:GetService("Players")
local localplayer = entities.localplayer
local runservice = game:GetService("RunService")

local skel_settings = {
    Visible = false,
    Transparency = 1,
    thickness = 1.5,
    color = Color3.new(1, 1, 1)
}

local function draw(player, Character)

    --R6
    local skel_head = Drawing.new("Line")
    skel_head.Transparency = 1
    skel_head.Thickness = 1.5
    skel_head.Visible = false
    skel_head.color = Color3.new(1, 1, 1)

    local skel_torso = Drawing.new("Line")
    skel_torso.Transparency = 1
    skel_torso.Thickness = 1.5
    skel_torso.Visible = false
    skel_torso.color = Color3.new(1, 1, 1)

    local skel_leftarm = Drawing.new("Line")
    skel_leftarm.Transparency = 1
    skel_leftarm.Thickness = 1.5
    skel_leftarm.Visible = false
    skel_leftarm.color = Color3.new(1, 1, 1)

    local skel_rightarm = Drawing.new("Line")
    skel_rightarm.Transparency = 1
    skel_rightarm.Thickness = 1.5
    skel_rightarm.Visible = false
    skel_rightarm.color = Color3.new(1, 1, 1)

    local skel_leftleg = Drawing.new("Line")
    skel_leftleg.Transparency = 1  
    skel_leftleg.Thickness = 1.5
    skel_leftleg.Visible = false
    skel_leftleg.color = Color3.new(1, 1, 1)

    local skel_rightarm = Drawing.new("Line")
    skel_rightarm.Transparency = 1
    skel_rightarm.Thickness = 1.5
    skel_rightarm.Visible = false
    skel_rightarm.color = Color3.new(1, 1, 1)

    ---R15
    local skel_head15 = Drawing.new("Line")
    skel_head15.Transparency = 1
    skel_head15.Thickness = 1.5
    skel_head15.Visible = false
    skel_head15.color = Color3.new(1, 1, 1)

    local skel_lowertorso15 = Drawing.new("Line")
    skel_lowertorso15.Transparency = 1
    skel_lowertorso15.Thickness = 1.5
    skel_lowertorso15.Visible = false
    skel_lowertorso15.color = Color3.new(1, 1, 1)

    local skel_uppertorso15 = Drawing.new("Line")
    skel_uppertorso15.Transparency = 1
    skel_uppertorso15.Thickness = 1.5
    skel_uppertorso15.Visible = false
    skel_uppertorso15.color = Color3.new(1, 1, 1)

    local skel_rightupperarm = Drawing.new("Line")
    skel_rightupperarm.Transparency = 1
    skel_rightupperarm.Thickness = 1.5
    skel_rightupperarm.Visible = false
    skel_rightupperarm.color = Color3.new(1, 1, 1)

    local skel_rightlowerarm = Drawing.new("Line")
    skel_rightlowerarm.Transparency = 1
    skel_rightlowerarm.Thickness = 1.5
    skel_rightlowerarm.Visible = false
    skel_rightlowerarm.color = Color3.new(1, 1, 1)

    local skel_righthand = Drawing.new("Line")
    skel_righthand.Transparency = 1
    skel_righthand.Thickness = 1.5
    skel_righthand.Visible = false
    skel_righthand.color = Color3.new(1, 1, 1)

    local skel_leftupperarm = Drawing.new("Line")
    skel_leftupperarm.Transparency = 1
    skel_leftupperarm.Thickness = 1.5
    skel_leftupperarm.Visible = false
    skel_leftupperarm.color = Color3.new(1, 1, 1)

    local skel_leftlowerarm = Drawing.new("Line")
    skel_leftlowerarm.Transparency = 1
    skel_leftlowerarm.Thickness = 1.5
    skel_leftlowerarm.Visible = false
    skel_leftlowerarm.color = Color3.new(1, 1, 1)

    local skel_lefthand = Drawing.new("Line")
    skel_lefthand.Transparency = 1
    skel_lefthand.Thickness = 1.5
    skel_lefthand.Visible = false
    skel_lefthand.color = Color3.new(1, 1, 1)

    local skel_rightupperleg = Drawing.new("Line")
    skel_rightupperleg.Transparency = 1
    skel_rightupperleg.Thickness = 1.5
    skel_rightupperleg.Visible = false
    skel_rightupperleg.color = Color3.new(1, 1, 1)

    local skel_rightlowerleg = Drawing.new("Line")
    skel_rightlowerleg.Transparency = 1
    skel_rightlowerleg.Thickness = 1.5
    skel_rightlowerleg.Visible = false
    skel_rightlowerleg.color = Color3.new(1, 1, 1)

    local skel_rightfoot = Drawing.new("Line")
    skel_rightfoot.Transparency = 1
    skel_rightfoot.Thickness = 1.5
    skel_rightfoot.Visible = false
    skel_rightfoot.color = Color3.new(1, 1, 1)

    local skel_leftupperleg = Drawing.new("Line")
    skel_leftupperleg.Transparency = 1
    skel_leftupperleg.Thickness = 1.5
    skel_leftupperleg.Visible = false
    skel_leftupperleg.color = Color3.new(1, 1, 1)

    local skel_leftlowerleg = Drawing.new("Line")
    skel_leftlowerleg.Transparency = 1
    skel_leftlowerleg.Thickness = 1.5
    skel_leftlowerleg.Visible = false
    skel_leftlowerleg.color = Color3.new(1, 1, 1)

    local skel_leftfoot = Drawing.new("Line")
    skel_leftfoot.Transparency = 1
    skel_leftfoot.Thickness = 1.5
    skel_leftfoot.Visible = false
    skel_leftfoot.color = Color3.new(1, 1, 1)

    local function updtate()
        local connection
        connection = runservice.RenderStepped:Connect(function()

            if Character and
            Character:FindFirstChild("HumanoidRootPart") and
            Character:FindFirstChild("Humanoid") and
            Character:FindFirstChild("Humanoid").health ~= 0 then

                local Character_rootpart_3d = Character.HumanoidRootPart.Position
                local Character_rootpart_2d, RootPart_onscreen = camera:worldToViewportPoint(Character_rootpart_3d)

                if RootPart_onscreen and Character.Humanoid.RigType == Enum.HumanoidRigType.R6 then

                    local head_2d = camera:WorldToViewportPoint(Character.Head.Position)
                    local uppertorso_2d = camera:WorldToViewportPoint(Character.Torso.Position + Vector2.new(0,1,0))
                    local lowertorso_2d = camera:WorldToViewportPoint(Character.Torso.Position - Vector2.new(0,1,0))
                    local leftarm_2d = camera:WorldToViewportPoint(Character["LeftArm"].Position)
                    local rightarm_2d = camera:WorldToViewportPoint(Character["RightArm"].Position)
                    local leftleg_2d = camera:WorldToViewportPoint(Character["LeftLeg"].Position - Vector2.new(0,1,0))
                    local rightleg_2d = camera:WorldToViewportPoint(Character["RightLeg"].Position - Vector2.new(0,1,0))

                    skel_head.From = Vector2.new(head_2d.X, head_2d.Y)
                    skel_head.To = Vector2.new(uppertorso_2d.X, uppertorso_2d.Y)

                    skel_torso.From = Vector2.new(uppertorso_2d.X, uppertorso_2d.Y)
                    skel_torso.To = Vector2.new(lowertorso_2d.X, lowertorso_2d.Y)

                    ksel_leftarm.From = Vector2.new(uppertorso_2d.X, uppertorso_2d.Y)
                    skel_leftarm.To = Vector2.new(leftarm_2d.X, leftarm_2d.Y)

                    skel_rightarm.From = Vector2.new(uppertorso_2d.X, uppertorso_2d.Y)
                    skel_rightarm.To = Vector2.new(rightarm_2d.X, rightarm_2d.Y)

                    skel_leftleg.From = Vector2.new(lowertorso_2d.X, lowertorso_2d.Y)
                    skel_leftleg.To = Vector2.new(leftleg_2d.X, leftleg_2d.Y)

                    skel_rightleg.From = Vector2.new(lowertorso_2d.X, lowertorso_2d.Y)
                    skel_rightleg.To = Vector2.new(rightleg_2d.X, rightleg_2d.Y)

                    skel_head.Visible = skel_settings.Visible
                    skel_leftleg.Visible = skel_settings.Visible
                    skel_rightarm.Visible = skel_settings.Visible
                    skel_rightarm.Visible = skel_settings.Visible
                    skel_rightleg.Visible = skel_settings.Visible
                    skel_torso.Visible = skel_settings.Visible

                    skel_head.Color = skel_settings.color
                    skel_leftleg.Color = skel_settings.color
                    skel_rightarm.Color = skel_settings.color
                    skel_rightarm.Color = skel_settings.color
                    skel_rightleg.Color = skel_settings.color
                    skel_torso.Color = skel_settings.color

                    skel_head.Thickness = skel_settings.thickness
                    skel_leftleg.Thickness = skel_settings.thickness
                    skel_rightarm.Thickness = skel_settings.thickness
                    skel_rightarm.Thickness = skel_settings.thickness
                    skel_rightleg.Thickness = skel_settings.thickness
                    skel_torso.Thickness = skel_settings.thickness

                    skel_head.Transparency = skel_settings.Transparency
                    skel_leftleg.Transparency = skel_settings.Transparency
                    skel_rightarm.Transparency = skel_settings.Transparency
                    skel_rightarm.Transparency = skel_settings.Transparency
                    skel_rightleg.Transparency = skel_settings.Transparency
                    skel_torso.Transparency = skel_settings.Transparency

                else

                    skel_head.Visible = false
                    skel_leftarm.Visible = false
                    skel_leftleg.Visible = false
                    skel_rightarm.Visible = false
                    skel_rightleg.Visible = false
                    skel_torso.Visible = false

                end
            else

                if player ~= nil then
                    connection:Disconnect()
                    connection = nil
                end

                skel_head.Visible = false
                skel_leftarm.Visible = false
                skel_leftleg.Visible = false
                skel_rightarm.Visible = false
                skel_rightleg.Visible = false
                skel_torso.Visible = false

            end

        end)

        if Character and
            Character:FindFirstChild("HumanoidRootPart") and
            Character:FindFirstChild("Humanoid") and
            Character:FindFirstChild("Humanoid").health ~= 0 then

                local Character_rootpart_3d = Character.HumanoidRootPart.Position
                local Character_rootpart_2d, RootPart_onscreen = camera:worldToViewportPoint(Character_rootpart_3d)

                if RootPart_onscreen and Character.Humanoid.RigType == Enum.HumanoidRigType.R15 then

                    local head15_2d = camera:WorldToViewportPoint(Character.Head.Position)
                    local uppertorso15_2d = camera:WorldToViewportPoint(Character.UpperTorso.Position)
                    local lowertorso15_2d = camera:WorldToViewportPoint(Character.LowerTorso.Position)

                    local rightupperarm_2d = camera:WorldToViewportPoint(Character["RightUpperArm"].Position)
                    local leftupperarm_2d = camera:WorldToViewportPoint(Character["LeftUpperArm"].Position)

                    local rightlowerarm_2d = camera:WorldToViewportPoint(Character["RightLowerArm"].Position)
                    local leftlowerarm_2d = camera:worldToViewportPoint(Character["LeftLowerArm"].Position)

                    local righthand_2d = camera:WorldToViewportPoint(Character["RightHand"].Position)
                    local lefthand_2d = camera:worldToViewportPoint(Character["LeftHand"].Position)

                    local rightupperleg_2d = camera:WorldToViewportPoint(Character["RightUpperLeg"].Position)
                    local leftupperleg_2d = camera:WorldToViewportPoint(Character["LeftUpperLeg"].Position)

                    local rightlowerleg_2d = camera:WorldToViewportPoint(Character["RightLowerLeg"].Position)
                    local leftlowerleg_2d = camera:WorldToViewportPoint(Character["LeftLowerLeg"].Position)

                    local rightfoot_2d = camera:WorldToViewportPoint(Character["RightFoot"].Position)
                    local leftfoor_2d = camera:WorldToViewportPoint(Character["LeftFoot"].Position)

                    skel_head15.From = Vector2.new(head15_2d.X, head15_2d.Y)
                    skel_head15.To = Vector2.new(uppertorso15_2d.X, uppertorso15_2d.Y)

                    skel_uppertorso15.From = Vector2.new(uppertorso15_2d.X, uppertorso15_2d.Y)
                    skel_uppertorso15.To = Vector2.new(lowertorso15_2d.X, lowertorso15_2d.Y)

                    skel_rightupperarm.From = Vector2.new(uppertorso15_2d.X, uppertorso15_2d.Y)
                    skel_rightupperarm.To  = Vector2.new(rightupperarm_2d.x, RightUpperArm.Y)

                    skel_leftupperarm.From = Vector2.new(uppertorso15_2d.X, uppertorso15_2d.Y)
                    skel_leftupperarm.To  = Vector2.new(leftupperarm_2d.x, leftUpperArm.Y)

                    skel_rightlowerarm.From = Vector2.new(rightupperarm_2d.X, rightupperarm_2d.Y)
                    skel_rightlowerarm.To  = Vector2.new(rightlowerarm_2d.x, rightlowerarm_2d.Y)

                    skel_leftlowerarm.From = Vector2.new(leftupperarm_2d.X, leftupperarm_2d.Y)
                    skel_leftlowerarm.To  = Vector2.new(leftlowerarm_2d.x, leftlowerarm_2d.Y)

                    skel_righthand.From = Vector2.new(rightlowerarm_2d.X, rightlowerarm_2d.Y)
                    skel_righthand.To  = Vector2.new(righthand_2d.x, righthand_2d.Y)

                    skel_lefthand.From = Vector2.new(leftlowerarm_2d.X, leftlowerarm_2d.Y)
                    skel_lefthand.To  = Vector2.new(lefthand_2d.x, lefthand_2d.Y)

                    skel_rightupperleg.From = Vector2.new(lowertorso15_2d.X, lowertorso15_2d.Y)
                    skel_rightUpperLeg.To = Vector2.new(rightupperleg_2d.X, rightupperleg_2d.Y)

                    skel_rightlowerleg.From = Vector2.new(rightupperleg_2d.X, rightupperleg_2d.Y)
                    skel_rightlowerLeg.To = Vector2.new(rightlowerleg_2d.X, rightlowerleg_2d.Y)

                    skel_rightfoot.From = Vector2.new(rightlowerleg_2d.X, rightlowerleg_2d.Y)
                    skel_rightfoot.To = Vector2.new(rightfoot_2d.X, rightfoot_2d.Y)

                    skel_lefttupperleg.From = Vector2.new(lowertorso15_2d.X, lowertorso15_2d.Y)
                    skel_leftUpperLeg.To = Vector2.new(leftupperleg_2d.X, leftupperleg_2d.Y)

                    skel_leftlowerleg.From = Vector2.new(leftupperleg_2d.X, leftupperleg_2d.Y)
                    skel_leftlowerLeg.To = Vector2.new(leftlowerleg_2d.X, leftlowerleg_2d.Y)

                    skel_leftfoot.From = Vector2.new(leftlowerleg_2d.X,leftlowerleg_2d.Y)
                    skel_leftfoot.To = Vector2.new(leftfoot_2d.X, leftfoot_2d.Y)


                    skel_head15.Visible = skel_settings.Visible
                    skel_lowertorso15.Visible = skel_settings.Visible
                    skel_uppertorso15.Visible = skel_settings.Visible
                    skel_rightupperarm.Visible = skel_settings.Visible
                    skel_rightlowerarm.Visible = skel_settings.Visible
                    skel_righthand.Visible = skel_settings.Visible
                    skel_leftupperarm.Visible = skel_settings.Visible
                    skel_leftlowerarm.Visible = skel_settings.Visible
                    skel_lefthand.Visible = skel_settings.Visible
                    skel_rightupperleg.Visible = skel_settings.Visible
                    skel_rightlowerleg.Visible = skel_settings.Visible
                    skel_rightfoot.Visible = skel_settings.Visible
                    skel_leftupperleg.Visible = skel_settings.Visible
                    skel_leftlowerleg.Visible = skel_settings.Visible
                    skel_leftfoot.Visible = skel_settings.Visible

                    skel_head15.Color = skel_settings.color
                    skel_lowertorso15.Color = skel_settings.color
                    skel_uppertorso15.Color = skel_settings.color
                    skel_rightupperarm.Color = skel_settings.color
                    skel_rightlowerarm.Color = skel_settings.color
                    skel_righthand.Color = skel_settings.color
                    skel_leftupperarm.Color = skel_settings.color
                    skel_leftlowerarm.Color = skel_settings.color
                    skel_lefthand.Color = skel_settings.color
                    skel_rightupperleg.Color = skel_settings.color
                    skel_rightlowerleg.Color = skel_settings.color
                    skel_rightfoot.Color = skel_settings.color
                    skel_leftupperleg.Color = skel_settings.color
                    skel_leftlowerleg.Color = skel_settings.color
                    skel_leftfoot.Color = skel_settings.color

                    skel_head15.Thickness = skel_settings.thickness
                    skel_lowertorso15.Thickness = skel_settings.thickness
                    skel_uppertorso15.Thickness = skel_settings.thickness
                    skel_rightupperarm.Thickness = skel_settings.thickness
                    skel_rightlowerarm.Thickness = skel_settings.thickness
                    skel_righthand.Thickness = skel_settings.thickness
                    skel_leftUpperarm.Thickness = skel_settings.thickness
                    skel_leftlowerarm.Thickness = skel_settings.thickness
                    skel_lefthand.Thickness = skel_settings.thickness
                    skel_rightupperleg.Thickness = skel_settings.thickness
                    skel_rightlowerleg.Thickness = skel_settings.thickness
                    skel_rightfoot.Thickness = skel_settings.thickness
                    skel_leftupperleg.Thickness = skel_settings.thickness
                    skel_leftlowerleg.Thickness = skel_settings.thickness
                    skel_leftfoot.Thickness = skel_settings.thickness

                    skel_head15.Transparency = skel_settings.Transparency
                    skel_lowertorso15.Transparency = skel_settings.Transparency
                    skel_uppertorso15.Transparency = skel_settings.Transparency
                    skel_rightupperarm.Transparency = skel_settings.Transparency
                    skel_rightlowerarm.Transparency = skel_settings.Transparency
                    skel_righthand.Transparency = skel_settings.Transparency
                    skel_leftupperarm.Transparency = skel_settings.Transparency
                    skel_leftlowerarm.Transparency = skel_settings.Transparency
                    skel_lefthand.Transparency = skel_settings.Transparency
                    skel_rightupperleg.Transparency = skel_settings.Transparency
                    skel_rightlowerleg.Transparency = skel_settings.Transparency
                    skel_rightfoot.Transparency = skel_settings.Transparency
                    skel_leftupperleg.Transparency = skel_settings.Transparency
                    skel_leftlowerleg.Transparency = skel_settings.Transparency
                    skel_leftfoot.Transparency = skel_settings.Transparency

                else

                    skel_head15.Visible = false
                    skel_lowertorso15.Visible = false
                    skel_uppertorso15.Visible = false
                    skel_rightupperarm.Visible = false
                    skel_rightlowerarm.Visible = false
                    skel_righthand.Visible = false
                    skel_leftupperarm.Visible = false
                    skel_leftlowerarm.Visible = false
                    skel_lefthand.Visible = false
                    skel_rightupperleg.Visible = false
                    skel_rightlowerleg.Visible = false
                    skel_rightfoot.Visible = false
                    skel_leftupperleg.Visible = false
                    skel_leftlowerleg.Visible = false    
                    skel_leftfoot.Visible = false

                end
            else

                if player ~= nil then
                    connection:Disconnect()
                    connection = nil
                end

                skel_head15.Visible = false
                skel_lowertorso15.Visible = false
                skel_uppertorso15.Visible = false
                skel_rightupperarm.Visible = false
                skel_rightlowerarm.Visible = false
                skel_righthand.Visible = false
                skel_leftupperarm.Visible = false
                skel_leftlowerarm.Visible = false
                skel_lefthand.Visible = false
                skel_rightupperleg.Visible = false
                skel_rightlowerleg.Visible = false
                skel_rightfoot.Visible = false
                skel_leftupperleg.Visible = false
                skel_leftlowerleg.Visible = false    
                skel_leftfoot.Visible = false

            end

        end
    end
    coroutine.wrap(updtate)()

end

local function playeradded(player)
    if player.Character then
        coroutine.wrap(draw)(player, player.Character)
    end
    player.CharacterAdded:Connect(function(Character)
        coroutine.wrap(draw)(player, Character)
    end)
end

for a,b in next, entities:GetPlayers() do
    if b ~= localplayer then
        playeradded()
    end
end

entities.PlayerAdded:Connect(playeradded)

local function getTracerFromPosition()
    if _G.TracerFrom == "Bottom" then
        return Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y)
    elseif _G.TracerFrom == "Middle" then
        return Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
    elseif _G.TracerFrom == "Top" then
        return Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 4)
    end
end

local function createDrawingObjects()
    local Box = Drawing.new("Square")
    Box.Visible = _G.boxVisible
    Box.Color = _G.boxColor
    Box.Thickness = _G.boxThickness
    Box.Transparency = _G.boxTransparency
    Box.Filled = false

    local BoxFilled = Drawing.new("Square")
    BoxFilled.Visible = _G.boxFilledVisible
    BoxFilled.Color = _G.boxFilledColor
    BoxFilled.Transparency = _G.boxFilledTransparency
    BoxFilled.Filled = true

    local HealthBar = Drawing.new("Square")
    HealthBar.Thickness = _G.HealthBarThickness
    HealthBar.Visible = _G.HealthBarVisible
    HealthBar.Transparency = _G.HealthBarTransparency
    HealthBar.Color = _G.HealthBarColor
    HealthBar.Filled = _G.HealthBarFilled

    local Tracer = Drawing.new("Line")
    Tracer.Visible = _G.TracerVisible
    Tracer.Thickness = _G.TracerThickness
    Tracer.Transparency = _G.TracerTransparency
    Tracer.Color = _G.TracerColor

    return Box, BoxFilled, HealthBar, Tracer
end

local function updateDrawingObjects(Box, BoxFilled, HealthBar, Tracer)
    Box.Color = _G.boxColor
    Box.Thickness = _G.boxThickness
    Box.Transparency = _G.boxTransparency
    Box.Visible = _G.boxVisible

    BoxFilled.Color = _G.boxFilledColor
    BoxFilled.Transparency = _G.boxFilledTransparency
    BoxFilled.Visible = _G.boxFilledVisible

    HealthBar.Thickness = _G.HealthBarThickness
    HealthBar.Visible = _G.HealthBarVisible
    HealthBar.Transparency = _G.HealthBarTransparency
    HealthBar.Color = _G.HealthBarColor
    HealthBar.Filled = _G.HealthBarFilled

    Tracer.Visible = _G.TracerVisible
    Tracer.Thickness = _G.TracerThickness
    Tracer.Transparency = _G.TracerTransparency
    Tracer.Color = _G.TracerColor
end

local function getHealthValues(player)
    local maxHealth, health
    if player:FindFirstChild("NRPBS") then
        maxHealth = player.NRPBS["MaxHealth"].Value
        health = player.NRPBS["Health"].Value
    else
        maxHealth = player.Character.Humanoid.MaxHealth
        health = player.Character.Humanoid.Health
    end
    return maxHealth, health
end

local function updateHealthBarPosition(HealthBar, Box, HeadPosition, LegPosition, RootPosition, isOutline, maxHealth, health)
    local offset = isOutline and 6 or 4
    local healthBarSize = (HeadPosition.Y - LegPosition.Y) / (maxHealth / math.clamp(health, 0, maxHealth))

    if _G.HealthBarPosition == "Left" then
        HealthBar.Position = Vector2.new(Box.Position.X - offset, Box.Position.Y + (1 / healthBarSize))
    elseif _G.HealthBarPosition == "Right" then
        HealthBar.Position = Vector2.new(Box.Position.X + Box.Size.X + offset - 2, Box.Position.Y + (1 / healthBarSize))
    end

    HealthBar.Size = Vector2.new(2, healthBarSize)
end

local function setupPlayerBox(v)
    local Box, BoxFilled, HealthBar, Tracer = createDrawingObjects()

    game:GetService("RunService").RenderStepped:Connect(function()
        updateDrawingObjects(Box, BoxFilled, HealthBar, Tracer)

        if v.Character and v.Character:FindFirstChild("Humanoid") and v.Character:FindFirstChild("HumanoidRootPart") and v ~= lplr and v.Character.Humanoid.Health > 0 then
            local Vector, onScreen = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)

            local RootPart = v.Character.HumanoidRootPart
            local Head = v.Character.Head
            local RootPosition, RootVis = worldToViewportPoint(currentCamera, RootPart.Position)
            local HeadPosition = worldToViewportPoint(currentCamera, Head.Position + HeadOff)
            local LegPosition = worldToViewportPoint(currentCamera, RootPart.Position - LegOff)

            if onScreen then
                local maxHealth, health = getHealthValues(v)

                Box.Size = Vector2.new(1000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)
                Box.Position = Vector2.new(RootPosition.X - Box.Size.X / 2, RootPosition.Y - Box.Size.Y / 2)
                Box.Visible = _G.boxVisible

                BoxFilled.Size = Vector2.new(1000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)
                BoxFilled.Position = Vector2.new(RootPosition.X - Box.Size.X / 2, RootPosition.Y - Box.Size.Y / 2)
                BoxFilled.Visible = _G.boxFilledVisible

                HealthBar.Size = Vector2.new(2, (HeadPosition.Y - LegPosition.Y) / (maxHealth / math.clamp(health, 0, maxHealth)))
                updateHealthBarPosition(HealthBar, Box, HeadPosition, LegPosition, RootPosition, false, maxHealth, health)
                HealthBar.Color = Color3.fromRGB(255 - 255 / (maxHealth / health), 255 / (maxHealth / health), 0)
                HealthBar.Visible = _G.HealthBarVisible

                Tracer.From = getTracerFromPosition()
                Tracer.To = Vector2.new(Vector.X, Vector.Y)

                if _G.teamcheck == true then
                    if _G.temcheckmode == "colors" then
                        if v.TeamColor == lplr.TeamColor then
                            Box.Color = _G.teamcolor
                            BoxFilled.Color = _G.teamcolor
                            Tracer.Color = _G.teamcolor
                        else
                            Box.Color = _G.enemycolor
                            BoxFilled.Color = _G.enemycolor
                            Tracer.Color = _G.enemycolor
                        end
                    elseif _G.temcheckmode == "invisible" then
                        if v.TeamColor == lplr.TeamColor then
                            Box.Visible = false
                            BoxFilled.Visible = false
                            HealthBar.Visible = false
                            Tracer.Visible = false
                            skel_settings.Visible = false
                        else
                            Box.Color = _G.enemycolor
                            BoxFilled.Color = _G.enemycolor
                            Tracer.Color = _G.enemycolor
                        end
                    end
                end
            else
                Box.Visible = false
                BoxFilled.Visible = false
                HealthBar.Visible = false
                Tracer.Visible = false
                Box.Color = _G.boxColor
                BoxFilled.Color = _G.boxFilledColor
                Tracer.Color = _G.TracerColor
                skel_settings.Visible = false
            end
        else
            Box.Visible = false
            BoxFilled.Visible = false
            HealthBar.Visible = false
            Tracer.Visible = false
            skel_settings.Visible = false
        end
    end)
end

for _, player in pairs(game.Players:GetChildren()) do
    setupPlayerBox(player)
end

game.Players.PlayerAdded:Connect(function(player)
    setupPlayerBox(player)
end)

local Window = Rayfield:CreateWindow({
    Name = "BNT ESP",
    Icon = 0,
    LoadingTitle = "By Bomzinho",
    LoadingSubtitle = "Loading....",
    Theme = "Amethyst",

    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,

    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "ESPP"
    },

    Discord = {
        Enabled = false,
        Invite = "",
        RememberJoins = true
    },

    KeySystem = true,
    KeySettings = {
        Title = "BNT ESP",
        Subtitle = "Key System",
        Note = "No method of obtaining the key is provided",
        FileName = "Key",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"4321", "1234"}
    }
})

local Tab1 = Window:CreateTab("Aimbot", 4483362458)

local Tab = Window:CreateTab("ESP", 4483362458)

local Label = Tab:CreateLabel("Geral KeySettings", 4483362458, Color3.fromRGB(0, 0, 0), false)

local Toggle = Tab:CreateToggle({
    Name = "Show Box",
    CurrentValue = false,
    Flag = "Show Box",
    Callback = function(Value)
        _G.boxVisible = Value
    end,
})

local Toggle2 = Tab:CreateToggle({
    Name = "Box Filled",
    CurrentValue = false,
    Flag = "BoxFilled",
    Callback = function(Value)
        _G.boxFilledVisible = Value
    end,
})

local Toggle3 = Tab:CreateToggle({
    Name = "Show Health Bar",
    CurrentValue = false,
    Flag = "healthbarouf",
    Callback = function(Value)
        _G.HealthBarVisible = Value
    end,
})

local Toggle4 = Tab:CreateToggle({
    Name = "Health Bar Filled",
    CurrentValue = false,
    Flag = "healthbarouff",
    Callback = function(Value)
        _G.HealthBarFilled = Value
    end,
})

local Toggle7 = Tab:CreateToggle({
    Name = "Show Tracer",
    CurrentValue = false,
    Flag = "TracerVisible",
    Callback = function(Value)
        _G.TracerVisible = Value
    end,
})

local Toggle7 = Tab:CreateToggle({
    Name = "Show Skeleton",
    CurrentValue = false,
    Flag = "TracerVisible",
    Callback = function(Value)
        skel_settings.Visible = Value
    end,
})

local Toggle5 = Tab:CreateToggle({
    Name = "Teamcheck",
    CurrentValue = false,
    Flag = "teamcheck",
    Callback = function(Value)
        _G.teamcheck = Value
    end,
})

local Label1 = Tab:CreateLabel("Color Settings", 4483362458, Color3.fromRGB(0, 0, 0), false)

local ColorPicker1 = Tab:CreateColorPicker({
    Name = "Team Color",
    Color = Color3.fromRGB(0, 255, 0),
    Flag = "teamcolor",
    Callback = function(Value)
        _G.teamcolor = Value
    end
})

local ColorPicker2 = Tab:CreateColorPicker({
    Name = "Enemy Color",
    Color = Color3.fromRGB(255, 0, 0),
    Flag = "enemycolor",
    Callback = function(Value)
        _G.enemycolor = Value
    end
})

local ColorPicker3 = Tab:CreateColorPicker({
    Name = "Box Color",
    Color = Color3.fromRGB(255, 255, 255),
    Flag = "boxColor",
    Callback = function(Value)
        _G.boxColor = Value
    end
})

local ColorPicker4 = Tab:CreateColorPicker({
    Name = "Box Filled Color",
    Color = Color3.fromRGB(255, 255, 255),
    Flag = "boxFilledColor",
    Callback = function(Value)
        _G.boxFilledColor = Value
    end
})

local ColorPicker5 = Tab:CreateColorPicker({
    Name = "Tracer Color",
    Color = Color3.fromRGB(255, 255, 255),
    Flag = "TracerColor",
    Callback = function(Value)
        _G.TracerColor = Value
    end
})

local ColorPicker5 = Tab:CreateColorPicker({
    Name = "Skeleton Color",
    Color = Color3.fromRGB(255, 255, 255),
    Flag = "TracerColor",
    Callback = function(Value)
        skel_settings.color = Value
    end
})

local Label2 = Tab:CreateLabel("Transparency Settings", 4483362458, Color3.fromRGB(0, 0, 0), false)

local Slider1 = Tab:CreateSlider({
    Name = "Box Transparency",
    Range = {0, 1},
    Increment = .05,
    Suffix = "",
    CurrentValue = 1,
    Flag = "boxTransparency",
    Callback = function(Value)
        _G.boxTransparency = Value
    end,
})

local Slider2 = Tab:CreateSlider({
    Name = "Box Filled Transparency",
    Range = {0, 1},
    Increment = .05,
    Suffix = "",
    CurrentValue = 1,
    Flag = "boxFilledTransparency",
    Callback = function(Value)
        _G.boxFilledTransparency = Value
    end,
})

local Slider3 = Tab:CreateSlider({
    Name = "Health Bar Transparency",
    Range = {0, 1},
    Increment = .05,
    Suffix = "",
    CurrentValue = 1,
    Flag = "HealthBarTransparency",
    Callback = function(Value)
        _G.HealthBarTransparency = Value
    end,
})

local Slider4 = Tab:CreateSlider({
    Name = "Tracer Transparency",
    Range = {0, 1},
    Increment = .05,
    Suffix = "",
    CurrentValue = 1,
    Flag = "TracerTransparency",
    Callback = function(Value)
        _G.TracerTransparency = Value
    end,
})

local Slider9 = Tab:CreateSlider({
    Name = "Skeleton Transparency",
    Range = {0, 1},
    Increment = .05,
    Suffix = "",
    CurrentValue = 1,
    Flag = "TracerTransparency",
    Callback = function(Value)
        skel_settings.Transparency = Value
    end,
})

local Label3 = Tab:CreateLabel("Thickness Settings", 4483362458, Color3.fromRGB(0, 0, 0), false)

local Slider5 = Tab:CreateSlider({
    Name = "Box Thickness",
    Range = {0, 10},
    Increment = .05,
    Suffix = "",
    CurrentValue = 1,
    Flag = "boxThickness",
    Callback = function(Value)
        _G.boxThickness = Value
    end,
})

local Slider6 = Tab:CreateSlider({
    Name = "Health Bar Thickness",
    Range = {0, 10},
    Increment = .05,
    Suffix = "",
    CurrentValue = 1,
    Flag = "HealthBarThickness",
    Callback = function(Value)
        _G.HealthBarThickness = Value
    end,
})

local Slider7 = Tab:CreateSlider({
    Name = "Tracer Thickness",
    Range = {0, 10},
    Increment = .05,
    Suffix = "",
    CurrentValue = 1,
    Flag = "TracerThickness",
    Callback = function(Value)
        _G.TracerThickness = Value
    end,
})

local Slider8 = Tab:CreateSlider({
    Name = "Skeleton Thickness",
    Range = {0, 10},
    Increment = .05,
    Suffix = "",
    CurrentValue = 1,
    Flag = "TracerThickness",
    Callback = function(Value)
        skel_settings.thickness = Value
    end,
})

local Label4 = Tab:CreateLabel("Other Settings", 4483362458, Color3.fromRGB(0, 0, 0), false)

local Dropdown1 = Tab:CreateDropdown({
    Name = "Teamcheck Mode",
    Options = {"colors", "invisible"},
    CurrentOption = {"colors"},
    MultipleOptions = false,
    Flag = "TeamcheckMode",
    Callback = function(Options)
        _G.temcheckmode = Options[1]
    end,
})

local Dropdown2 = Tab:CreateDropdown({
    Name = "Health Bar Position",
    Options = {"Left", "Right"},
    CurrentOption = {"Left"},
    MultipleOptions = false,
    Flag = "HealthBarPosition",
    Callback = function(Options)
        _G.HealthBarPosition = Options[1]
    end,
})

local Dropdown3 = Tab:CreateDropdown({
    Name = "Tracer From",
    Options = {"Bottom", "Middle", "Top"},
    CurrentOption = {"Bottom"},
    MultipleOptions = false,
    Flag = "TracerFrom",
    Callback = function(Options)
        _G.TracerFrom = Options[1]
    end,
})

Rayfield:LoadConfiguration()
