local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local lplr = game.Players.LocalPlayer
local camera = game:GetService("Workspace").CurrentCamera
local currentCamera = workspace.CurrentCamera
local worldToViewportPoint = currentCamera.worldToViewportPoint
local ps = game.Players

local HeadOff = Vector3.new(0, 0.5, 0)
local LegOff = Vector3.new(0, 3, 0)

-- Configurações
_G.temcheck = false
_G.temcheckmode = "colors" -- opções: "colors", "invisible"
_G.teamcolor = Color3.new(0, 1, 0) -- Cor para o time
_G.enemycolor = Color3.new(1, 0, 0) -- Cor para inimigos

_G.boxColor = Color3.new(0, 0, 0)
_G.boxThickness = 1
_G.boxTransparency = 1
_G.boxVisible = false

-- Configurações BoxFilled
_G.boxFilledColor = Color3.new(0, 0, 0)
_G.boxFilledTransparency = 0.5
_G.boxFilledVisible = false

_G.HealthBarThickness = 1
_G.HealthBarVisible = false
_G.HealthBarTransparency = 1
_G.HealthBarColor = Color3.new(0, 1, 0)
_G.HealthBarFilled = true

_G.HealthBarPosition = "Left"

_G.TracerVisible = false
_G.TracerThickness = 1.5
_G.TracerTransparency = 1
_G.TracerColor = Color3.new(0, 0, 0)

_G.TracerFrom = "Bottom"

--Skeleton
local camera = workspace.CurrentCamera
local entities = game:GetService("Players")
local localPlayer = entities.LocalPlayer
local runService = game:GetService("RunService")

local skel_settings = {
    skelvi = false,
    color = Color3.new(1, 1, 1),
    thickness = 1.5,
    transparency = 1
}

if ps.Character.Humanoid.RigType == Enum.HumanoidRigType.R6 then
    local function draw(player, character)

        local skel_head = Drawing.new("Line")
        skel_head.Visible = false
        skel_head.Thickness = 1.5
        skel_head.Color = Color3.new(1, 1, 1)
        skel_head.Transparency = 1
    
        local skel_torso = Drawing.new("Line")
        skel_torso.Visible = false
        skel_torso.Thickness = 1.5
        skel_torso.Color = Color3.new(1, 1, 1)
        skel_torso.Transparency = 1
    
        local skel_leftarm = Drawing.new("Line")
        skel_leftarm.Visible = false
        skel_leftarm.Thickness = 1.5
        skel_leftarm.Color = Color3.new(1, 1, 1)
        skel_leftarm.Transparency = 1
    
        local skel_rightarm = Drawing.new("Line")
        skel_rightarm.Visible = false
        skel_rightarm.Thickness = 1.5
        skel_rightarm.Color = Color3.new(1, 1, 1)
        skel_rightarm.Transparency = 1
    
        local skel_leftleg = Drawing.new("Line")
        skel_leftleg.Visible = false
        skel_leftleg.Thickness = 1.5
        skel_leftleg.Color = Color3.new(1, 1, 1)
        skel_leftleg.Transparency = 1
    
        local skel_rightleg = Drawing.new("Line")
        skel_rightleg.Visible = false
        skel_rightleg.Thickness = 1.5
        skel_rightleg.Color = Color3.new(1, 1, 1)
        skel_rightleg.Transparency = 1
    
        local function update()
            local connection
            connection = runService.RenderStepped:Connect(function()
                
                if workspace:FindFirstChild(character.Name) and
                character and
                character:FindFirstChild("HumanoidRootPart") and
                character:FindFirstChild("Humanoid") and
                character:FindFirstChild("Humanoid").Health ~= 0 then
                    
                    local character_rootpart_3d = character.HumanoidRootPart.Position
                    local character_rootpart_2d, rootpart_onscreen = camera:WorldToViewportPoint(character_rootpart_3d)
    
                    if rootpart_onscreen and character.Humanoid.RigType == Enum.HumanoidRigType.R6 and skel_settings.skelvi == true then
                      
                        local head_2d = camera:WorldToViewportPoint(character.Head.Position)
                        local torso_upper_2d = camera:WorldToViewportPoint(character.Torso.Position + Vector3.new(0, 1, 0))
                        local torso_lower_2d = camera:WorldToViewportPoint(character.Torso.Position + Vector3.new(0, -1, 0))
    
                        local leftArm_2d = camera:WorldToViewportPoint(character["Left Arm"].Position)
                        local rightArm_2d = camera:WorldToViewportPoint(character["Right Arm"].Position)
                        local leftLeg_2d = camera:WorldToViewportPoint(character["Left Leg"].Position + Vector3.new(0, -1, 0))
                        local rightLeg_2d = camera:WorldToViewportPoint(character["Right Leg"].Position + Vector3.new(0, -1, 0))
    
                        skel_head.From = Vector2.new(head_2d.X, head_2d.Y)
                        skel_head.To = Vector2.new(torso_upper_2d.X, torso_upper_2d.Y)
    
                        skel_torso.From = Vector2.new(torso_upper_2d.X, torso_upper_2d.Y)
                        skel_torso.To = Vector2.new(torso_lower_2d.X, torso_lower_2d.Y)
    
                        skel_leftarm.From = Vector2.new(torso_upper_2d.X, torso_upper_2d.Y)
                        skel_leftarm.To = Vector2.new(leftArm_2d.X, leftArm_2d.Y)
    
                        skel_rightarm.From = Vector2.new(torso_upper_2d.X, torso_upper_2d.Y)
                        skel_rightarm.To = Vector2.new(rightArm_2d.X, rightArm_2d.Y)
    
                        skel_leftleg.From = Vector2.new(torso_lower_2d.X, torso_lower_2d.Y)
                        skel_leftleg.To = Vector2.new(leftLeg_2d.X, leftLeg_2d.Y)
    
                        skel_rightleg.From = Vector2.new(torso_lower_2d.X, torso_lower_2d.Y)
                        skel_rightleg.To = Vector2.new(rightLeg_2d.X, rightLeg_2d.Y)
    
                        skel_head.Visible = skel_settings.skelvi
                        skel_torso.Visible = skel_settings.skelvi
                        skel_leftarm.Visible = skel_settings.skelvi
                        skel_rightarm.Visible = skel_settings.skelvi
                        skel_leftleg.Visible = skel_settings.skelvi
                        skel_rightleg.Visible = skel_settings.skelvi
    
                        skel_head.Color = skel_settings.color
                        skel_torso.Color = skel_settings.color
                        skel_leftarm.Color = skel_settings.color
                        skel_rightarm.Color = skel_settings.color
                        skel_leftleg.Color = skel_settings.color
                        skel_rightleg.Color = skel_settings.color
    
                        skel_head.Transparency = skel_settings.transparency
                        skel_torso.Transparency = skel_settings.transparency
                        skel_leftarm.Transparency = skel_settings.transparency
                        skel_rightarm.Transparency = skel_settings.transparency
                        skel_leftleg.Transparency = skel_settings.transparency
                        skel_rightleg.Transparency = skel_settings.transparency
    
                        skel_head.Thickness = skel_settings.thickness
                        skel_torso.Thickness = skel_settings.thickness
                        skel_leftarm.Thickness = skel_settings.thickness
                        skel_rightarm.Thickness = skel_settings.thickness
                        skel_leftleg.Thickness = skel_settings.thickness
                        skel_rightleg.Thickness = skel_settings.thickness
    
                    else
    
                        skel_head.Visible = false
                        skel_torso.Visible = false
                        skel_leftarm.Visible = false
                        skel_rightarm.Visible = false
                        skel_leftleg.Visible = false
                        skel_rightleg.Visible = false
    
                    end
        
                else
    
                    if player == nil then
                        connection:Disconnect()
                        connection = nil
                    end
    
                    skel_head.Visible = false
                    skel_torso.Visible = false
                    skel_leftarm.Visible = false
                    skel_rightarm.Visible = false
                    skel_leftleg.Visible = false
                    skel_rightleg.Visible = false
    
                end
            end)
        end
        coroutine.wrap(update)()
    end
    
    local function playeradded(player)
        if player.Character then
            coroutine.wrap(draw)(player, player.Character)
        end
        player.CharacterAdded:Connect(function(character)
            coroutine.wrap(draw)(player, character)
        end)
    end
    
    for _, player in next, entities:GetPlayers() do
        if player ~= localPlayer then
            playeradded(player)
        end
    end
    
    entities.PlayerAdded:Connect(playeradded)
end

if ps.Character.Humanoid.RigType == Enum.HumanoidRigType.R15 then
    local function drawR15(player, character)

        local skel_Head = Drawing.new("Line")
        skel_Head.Visible = false
        skel_Head.Thickness = 1.5
        skel_Head.Color = Color3.new(1, 1, 1)
        skel_Head.Transparency = 1
    
        local skel_UpperTorso = Drawing.new("Line")
        skel_UpperTorso.Visible = false
        skel_UpperTorso.Thickness = 1.5
        skel_UpperTorso.Color = Color3.new(1, 1, 1)
        skel_UpperTorso.Transparency = 1
    
        local skel_LowerTorso = Drawing.new("Line")
        skel_LowerTorso.Visible = false
        skel_LowerTorso.Thickness = 1.5
        skel_LowerTorso.Color = Color3.new(1, 1, 1)
        skel_LowerTorso.Transparency = 1
    
        local skel_RightUpperArm = Drawing.new("Line")
        skel_RightUpperArm.Visible = false
        skel_RightUpperArm.Thickness = 1.5
        skel_RightUpperArm.Color = Color3.new(1, 1, 1)
        skel_RightUpperArm.Transparency = 1
    
        local skel_RightLowerArm = Drawing.new("Line")
        skel_RightLowerArm.Visible = false
        skel_RightLowerArm.Thickness = 1.5
        skel_RightLowerArm.Color = Color3.new(1, 1, 1)
        skel_RightLowerArm.Transparency = 1
    
        local skel_RightHand = Drawing.new("Line")
        skel_RightHand.Visible = false
        skel_RightHand.Thickness = 1.5
        skel_RightHand.Color = Color3.new(1, 1, 1)
        skel_RightHand.Transparency = 1
    
        local skel_LeftUpperArm = Drawing.new("Line")
        skel_LeftUpperArm.Visible = false
        skel_LeftUpperArm.Color = Color3.new(1, 1, 1)
        skel_LeftUpperArm.Color = Color3.new(1, 1, 1)
        skel_LeftUpperArm.Transparency = 1
    
        local skel_LeftLowerArm = Drawing.new("Line")
        skel_LeftLowerArm.Visible = false
        skel_LeftLowerArm.Thickness = 1.5
        skel_LeftLowerArm.Color = Color3.new(1, 1, 1)
        skel_LeftLowerArm.Transparency = 1
    
        local skel_LeftHand = Drawing.new("Line")
        skel_LeftHand.Visible = false
        skel_LeftHand.Thickness = 1.5
        skel_LeftHand.Color = Color3.new(1, 1, 1)
        skel_LeftHand.Transparency = 1
    
        local skel_RightUpperLeg = Drawing.new("Line")
        skel_RightUpperLeg.Visible = false
        skel_RightUpperLeg.Thickness = 1.5
        skel_RightUpperLeg.Color = Color3.new(1, 1, 1)
        skel_RightUpperLeg.Transparency = 1
    
        local skel_RightLowerLeg = Drawing.new("Line")
        skel_RightLowerLeg.Visible = false
        skel_RightLowerLeg.Thickness = 1.5
        skel_RightLowerLeg.Color = Color3.new(1, 1, 1)
        skel_RightLowerLeg.Transparency = 1
    
        local skel_RightFoot = Drawing.new("Line")
        skel_RightFoot.Visible = false
        skel_RightFoot.Thickness = 1.5
        skel_RightFoot.Color = Color3.new(1, 1, 1)
        skel_RightFoot.Transparency = 1
    
        local skel_LeftUpperleg = Drawing.new("Line")
        skel_LeftUpperleg.Visible = false
        skel_LeftUpperleg.Thickness = 1.5
        skel_LeftUpperleg.Color = Color3.new(1, 1, 1)
        skel_LeftUpperleg.Transparency = 1
    
        local skel_LeftLowerleg = Drawing.new("Line")
        skel_LeftLowerleg.Visible = false
        skel_LeftLowerleg.Thickness = 1.5
        skel_LeftLowerleg.Color = Color3.new(1, 1, 1)
        skel_LeftLowerleg.Transparency = 1
    
        local skel_LeftFoot = Drawing.new("Line")
        skel_LeftFoot.Visible = false
        skel_LeftFoot.Thickness = 1.5
        skel_LeftFoot.Color = Color3.new(1, 1, 1)
        skel_LeftFoot.Transparency = 1
    
    
        local function updateR15()
            local connection
            connection = runService.RenderStepped:Connect(function()
                
                if workspace:FindFirstChild(character.Name) and
                character and
                character:FindFirstChild("HumanoidRootPart") and
                character:FindFirstChild("Humanoid") and
                character:FindFirstChild("Humanoid").Health ~= 0 then
                    
                    local character_rootpart_3d = character.HumanoidRootPart.Position
                    local character_rootpart_2d, rootpart_onscreen = camera:WorldToViewportPoint(character_rootpart_3d)
    
                    if rootpart_onscreen and character.Humanoid.RigType == Enum.HumanoidRigType.R15 and skel_settings.skelvi == true then
                        local Head_2d = camera:WorldToViewportPoint(character.Head.Position)
                        local UpperTorso_2d = camera:WorldToViewportPoint(character.UpperTorso.Position)
                        local LowerTorso_2d = camera:WorldToViewportPoint(character.skel_LowerTorso.Position)
    
                        local RightUpperArm_2d = camera:WorldToViewportPoint(character["RightUpperArm"].Position)
                        local RightLowerArm_2d = camera:WorldToViewportPoint(character["RightLowerArm"].Position)
                        local RightHand_2d = camera:WorldToViewportPoint(character["RightHand"].Position)
                        local LeftUpperArm_2d = camera:WorldToViewportPoint(character["LeftUpperArm"].Position)
                        local LeftLowerArm_2d = camera:WorldToViewportPoint(character["LeftLowerArm"].Position)
                        local LeftHand_2d = camera:WorldToViewportPoint(character["LeftHand"].Position)
    
                        local RightUpperLeg_2d = camera:WorldToViewportPoint(character["RightUpperLeg"].Position)
                        local RightLowerLeg_2d = camera:WorldToViewportPoint(character["RightLowerLeg"].Position)
                        local RightFoot_2d = camera:WorldToViewportPoint(character["RightFoot"].Position)
                        local LeftUpperLeg_2d = camera:WorldToViewportPoint(character["LeftUpperLeg"].Position)
                        local LeftLowerLeg_2d = camera:WorldToViewportPoint(character["LeftLowerLeg"].Position)
                        local LeftFoot_2d = camera:WorldToViewportPoint(character["LeftFoot"].Position)
    
                        skel_Head.From = Vector2.new(Head_2d.X, Head_2d.Y)
                        skel_Head.To = Vector2.new(UpperTorso_2d.x, UpperTorso_2d.Y)
    
                        skel_UpperTorso.From = Vector2.new(UpperTorso_2d.x, UpperTorso_2d.Y)
                        skel_UpperTorso.To = Vector2.new(LowerTorso_2d.X, LowerTorso_2d.Y)
    
                        skel_RightUpperArm.From = Vector2.new(UpperTorso_2d.x, UpperTorso_2d.Y)
                        skel_RightUpperArm.To = Vector2.new(RightUpperArm_2d.x, RightUpperArm_2d.Y)
    
                        skel_RightLowerArm.From = Vector2.new(RightUpperArm_2d.x, RightUpperArm_2d.Y)
                        skel_RightLowerArm.To = Vector2.new(RightLowerArm_2d.x, RightLowerArm_2d.Y)
    
                        skel_RightHand.From = Vector2.new(RightLowerArm_2d.x, RightLowerArm_2d.Y)
                        skel_RightHand.Tom = Vector2.new(RightHand_2d.X, RightHand_2d.Y)
    
                        skel_RightUpperLeg.From = Vector2.new(LowerTorso_2d.x, LowerTorso_2d.Y)
                        skel_RightUpperLeg.To = Vector2.new(RightUpperLeg_2d.x, RightUpperLeg_2d.Y)
    
                        skel_RightLowerLeg.From = Vector2.new(RightUpperLeg_2d.x, RightUpperLeg_2d.Y)
                        skel_RightLowerLeg.To = Vector2.new(RightLowerLeg_2d.x, RightLowerLeg_2d.Y)
    
                        skel_RightFoot.From = Vector2.new(RightLowerLeg_2d.x, RightLowerLeg_2d.Y)
                        skel_RightFoot.Tom = Vector2.new(RightFoot_2d.X, RightFoot_2d.Y)
    
                        skel_LeftUpperArm.From = Vector2.new(UpperTorso_2d.x, UpperTorso_2d.Y)
                        skel_LeftUpperArm.To = Vector2.new(LeftUpperArm_2d.x, LeftUpperArm_2d.Y)
    
                        skel_LeftLowerArm.From = Vector2.new(LeftUpperArm_2d.x, LeftUpperArm_2d.Y)
                        skel_LeftLowerArm.To = Vector2.new(LeftLowerArm_2d.x, LeftLowerArm_2d.Y)
    
                        skel_LeftHand.From = Vector2.new(RightLowerArm_2d.x, RightLowerArm_2d.Y)
                        skel_LeftHand.Tom = Vector2.new(LeftHand_2d.X, LeftHand_2d.Y)
    
                        skel_LeftUpperleg.From = Vector2.new(LowerTorso_2d.x, LowerTorso_2d.Y)
                        skel_LeftUpperleg.To = Vector2.new(LeftUpperLeg_2d.x, LeftUpperLeg_2d.Y)
    
                        skel_LeftLowerleg.From = Vector2.new(LeftUpperLeg_2d.x, LeftUpperLeg_2d.Y)
                        skel_LeftLowerleg.To = Vector2.new(LeftLowerLeg_2d.x, LeftLowerLeg_2d.Y)
    
                        skel_LeftFoot.From = Vector2.new(LeftLowerLeg_2d.x, LeftLowerLeg_2d.Y)
                        skel_LeftFoot.Tom = Vector2.new(LeftFoot_2d.X, LeftFoot_2d.Y)
    
                        skel_Head.Visible = skel_settings.skelvi
                        skel_LeftFoot.Visible = skel_settings.skelvi
                        skel_LeftHand.Visible = skel_settings.skelvi
                        skel_LeftLowerArm.Visible = skel_settings.skelvi
                        skel_LeftLowerleg.Visible = skel_settings.skelvi
                        skel_LeftUpperArm.Visible = skel_settings.skelvi
                        skel_LeftUpperleg.Visible = skel_settings.skelvi
                        skel_LowerTorso.Visible = skel_settings.skelvi
                        skel_RightFoot.Visible = skel_settings.skelvi
                        skel_RightHand.Visible = skel_settings.skelvi
                        skel_RightLowerArm.Visible = skel_settings.skelvi
                        skel_RightLowerLeg.Visible = skel_settings.skelvi
                        skel_RightUpperArm.Visible = skel_settings.skelvi
                        skel_RightUpperLeg.Visible = skel_settings.skelvi
                        skel_UpperTorso.Visible = skel_settings.skelvi
    
                        skel_Head.Color = skel_settings.color
                        skel_LeftFoot.Color = skel_settings.color
                        skel_LeftHand.Color = skel_settings.color
                        skel_LeftLowerArm.Color = skel_settings.color
                        skel_LeftLowerleg.Color = skel_settings.color
                        skel_LeftUpperArm.Color = skel_settings.color
                        skel_LeftUpperleg.Color = skel_settings.color
                        skel_LowerTorso.Color = skel_settings.color
                        skel_RightFoot.Color = skel_settings.color
                        skel_RightHand.Color = skel_settings.color
                        skel_RightLowerArm.Color = skel_settings.color
                        skel_RightLowerLeg.Color = skel_settings.color
                        skel_RightUpperArm.Color = skel_settings.color
                        skel_RightUpperLeg.Color = skel_settings.color
                        skel_UpperTorso.Color = skel_settings.color
    
                        skel_Head.Transparency = skel_settings.transparency
                        skel_LeftFoot.Transparency = skel_settings.transparency
                        skel_LeftHand.Transparency = skel_settings.transparency
                        skel_LeftLowerArm.Transparency = skel_settings.transparency
                        skel_LeftLowerleg.Transparency = skel_settings.transparency
                        skel_LeftUpperArm.Transparency = skel_settings.transparency
                        skel_LeftUpperleg.Transparency = skel_settings.transparency
                        skel_LowerTorso.Transparency = skel_settings.transparency
                        skel_RightFoot.Transparency = skel_settings.transparency
                        skel_RightHand.Transparency = skel_settings.transparency
                        skel_RightLowerArm.Transparency = skel_settings.transparency
                        skel_RightLowerLeg.Transparency = skel_settings.transparency
                        skel_RightUpperArm.Transparency = skel_settings.transparency
                        skel_RightUpperLeg.Transparency = skel_settings.transparency
                        skel_UpperTorso.Transparency = skel_settings.transparency
    
                        skel_Head.Thickness = skel_settings.thickness
                        skel_LeftFoot.Thickness = skel_settings.thickness
                        skel_LeftHand.Thickness = skel_settings.thickness
                        skel_LeftLowerArm.Thickness = skel_settings.thickness
                        skel_LeftLowerleg.Thickness = skel_settings.thickness
                        skel_LeftUpperArm.Thickness = skel_settings.thickness
                        skel_LeftUpperleg.Thickness = skel_settings.thickness
                        skel_LowerTorso.Thickness = skel_settings.thickness
                        skel_RightFoot.Thickness = skel_settings.thickness
                        skel_RightHand.Thickness = skel_settings.thickness
                        skel_RightLowerArm.Thickness = skel_settings.thickness
                        skel_RightLowerLeg.Thickness = skel_settings.thickness
                        skel_RightUpperArm.Thickness = skel_settings.thickness
                        skel_RightUpperLeg.Thickness = skel_settings.thickness
                        skel_UpperTorso.Thickness = skel_settings.thickness
                    else
    
                        skel_Head.Visible = false
                        skel_LeftFoot.Visible = false
                        skel_LeftHand.Visible = false
                        skel_LeftLowerArm.Visible = false
                        skel_LeftLowerleg.Visible = false
                        skel_LeftUpperArm.Visible = false
                        skel_LeftUpperleg.Visible = false
                        skel_LowerTorso.Visible = false
                        skel_RightFoot.Visible = false
                        skel_RightHand.Visible = false
                        skel_RightLowerArm.Visible = false
                        skel_RightLowerLeg.Visible = false
                        skel_RightUpperArm.Visible = false
                        skel_RightUpperLeg.Visible = false
                        skel_UpperTorso.Visible = false
    
                    end
        
                else
    
                    if player == nil then
                        connection:Disconnect()
                        connection = nil
                    end
    
                    skel_Head.Visible = false
                        skel_LeftFoot.Visible = false
                        skel_LeftHand.Visible = false
                        skel_LeftLowerArm.Visible = false
                        skel_LeftLowerleg.Visible = false
                        skel_LeftUpperArm.Visible = false
                        skel_LeftUpperleg.Visible = false
                        skel_LowerTorso.Visible = false
                        skel_RightFoot.Visible = false
                        skel_RightHand.Visible = false
                        skel_RightLowerArm.Visible = false
                        skel_RightLowerLeg.Visible = false
                        skel_RightUpperArm.Visible = false
                        skel_RightUpperLeg.Visible = false
                        skel_UpperTorso.Visible = false
    
                end
            end)
        end
        coroutine.wrap(updateR15)()
    end
    
    local function playeradded(player)
        if player.Character then
            coroutine.wrap(drawR15)(player, player.Character)
        end
        player.CharacterAdded:Connect(function(character)
            coroutine.wrap(drawR15)(player, character)
        end)
    end
    
    for _, player in next, entities:GetPlayers() do
        if player ~= localPlayer then
            playeradded(player)
        end
    end
    
    entities.PlayerAdded:Connect(playeradded)
end

-- Função para definir a posição do tracer com base na seleção do dropdown
local function getTracerFromPosition()
    if _G.TracerFrom == "Bottom" then
        return Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y)
    elseif _G.TracerFrom == "Middle" then
        return Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
    elseif _G.TracerFrom == "Top" then
        return Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 4)
    end
end

-- Definir Box, BoxOutline e BoxFilled no início
local function createDrawingObjects()
    local Box = Drawing.new("Square")
    Box.Visible = _G.boxVisible
    Box.Color = _G.boxColor
    Box.Thickness = _G.boxThickness
    Box.Transparency = _G.boxTransparency
    Box.Filled = false

    local BoxFilled = Drawing.new("Square")
    BoxFilled.Visible = _G.boxFilledVisible
    BoxFilled.Color = _G.boxFilledColor
    BoxFilled.Transparency = _G.boxFilledTransparency
    BoxFilled.Filled = true

    local HealthBar = Drawing.new("Square")
    HealthBar.Thickness = _G.HealthBarThickness
    HealthBar.Visible = _G.HealthBarVisible
    HealthBar.Transparency = _G.HealthBarTransparency
    HealthBar.Color = _G.HealthBarColor
    HealthBar.Filled = _G.HealthBarFilled

    local Tracer = Drawing.new("Line")
    Tracer.Visible = _G.TracerVisible
    Tracer.Thickness = _G.TracerThickness
    Tracer.Transparency = _G.TracerTransparency
    Tracer.Color = _G.TracerColor

    return Box, BoxFilled, HealthBar, Tracer
end

local function updateDrawingObjects(Box, BoxFilled, HealthBar, Tracer)
    Box.Color = _G.boxColor
    Box.Thickness = _G.boxThickness
    Box.Transparency = _G.boxTransparency
    Box.Visible = _G.boxVisible

    BoxFilled.Color = _G.boxFilledColor
    BoxFilled.Transparency = _G.boxFilledTransparency
    BoxFilled.Visible = _G.boxFilledVisible

    HealthBar.Thickness = _G.HealthBarThickness
    HealthBar.Visible = _G.HealthBarVisible
    HealthBar.Transparency = _G.HealthBarTransparency
    HealthBar.Color = _G.HealthBarColor
    HealthBar.Filled = _G.HealthBarFilled

    Tracer.Visible = _G.TracerVisible
    Tracer.Thickness = _G.TracerThickness
    Tracer.Transparency = _G.TracerTransparency
    Tracer.Color = _G.TracerColor
end

local function getHealthValues(player)
    local maxHealth, health
    if player:FindFirstChild("NRPBS") then
        maxHealth = player.NRPBS["MaxHealth"].Value
        health = player.NRPBS["Health"].Value
    else
        maxHealth = player.Character.Humanoid.MaxHealth
        health = player.Character.Humanoid.Health
    end
    return maxHealth, health
end

local function updateHealthBarPosition(HealthBar, Box, HeadPosition, LegPosition, RootPosition, isOutline, maxHealth, health)
    local offset = isOutline and 6 or 4
    local healthBarSize = (HeadPosition.Y - LegPosition.Y) / (maxHealth / math.clamp(health, 0, maxHealth))

    if _G.HealthBarPosition == "Left" then
        HealthBar.Position = Vector2.new(Box.Position.X - offset, Box.Position.Y + (1 / healthBarSize))
    elseif _G.HealthBarPosition == "Right" then
        HealthBar.Position = Vector2.new(Box.Position.X + Box.Size.X + offset - 2, Box.Position.Y + (1 / healthBarSize))
    end

    HealthBar.Size = Vector2.new(2, healthBarSize)
end

local function setupPlayerBox(v)
    local Box, BoxFilled, HealthBar, Tracer = createDrawingObjects()

    game:GetService("RunService").RenderStepped:Connect(function()
        updateDrawingObjects(Box, BoxFilled, HealthBar, Tracer)

        if v.Character and v.Character:FindFirstChild("Humanoid") and v.Character:FindFirstChild("HumanoidRootPart") and v ~= lplr and v.Character.Humanoid.Health > 0 then
            local Vector, onScreen = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)

            local RootPart = v.Character.HumanoidRootPart
            local Head = v.Character.Head
            local RootPosition, RootVis = worldToViewportPoint(currentCamera, RootPart.Position)
            local HeadPosition = worldToViewportPoint(currentCamera, Head.Position + HeadOff)
            local LegPosition = worldToViewportPoint(currentCamera, RootPart.Position - LegOff)

            if onScreen then
                local maxHealth, health = getHealthValues(v)

                Box.Size = Vector2.new(1000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)
                Box.Position = Vector2.new(RootPosition.X - Box.Size.X / 2, RootPosition.Y - Box.Size.Y / 2)
                Box.Visible = _G.boxVisible

                BoxFilled.Size = Vector2.new(1000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)
                BoxFilled.Position = Vector2.new(RootPosition.X - Box.Size.X / 2, RootPosition.Y - Box.Size.Y / 2)
                BoxFilled.Visible = _G.boxFilledVisible

                HealthBar.Size = Vector2.new(2, (HeadPosition.Y - LegPosition.Y) / (maxHealth / math.clamp(health, 0, maxHealth)))
                updateHealthBarPosition(HealthBar, Box, HeadPosition, LegPosition, RootPosition, false, maxHealth, health)
                HealthBar.Color = Color3.fromRGB(255 - 255 / (maxHealth / health), 255 / (maxHealth / health), 0)
                HealthBar.Visible = _G.HealthBarVisible

                -- Atualizando a posição do Tracer
                Tracer.From = getTracerFromPosition()
                Tracer.To = Vector2.new(Vector.X, Vector.Y)

                if _G.teamcheck == true then
                    if _G.temcheckmode == "colors" then
                        if v.TeamColor == lplr.TeamColor then
                            Box.Color = _G.teamcolor
                            BoxFilled.Color = _G.teamcolor
                            Tracer.Color = _G.teamcolor
                        else
                            Box.Color = _G.enemycolor
                            BoxFilled.Color = _G.enemycolor
                            Tracer.Color = _G.enemycolor
                        end
                    elseif _G.temcheckmode == "invisible" then
                        if v.TeamColor == lplr.TeamColor then
                            Box.Visible = false
                            BoxFilled.Visible = false
                            HealthBar.Visible = false
                            Tracer.Visible = false
                            skel_settings.skelvi = false
                        else
                            Box.Color = _G.enemycolor
                            BoxFilled.Color = _G.enemycolor
                            Tracer.Color = _G.enemycolor
                        end
                    end
                end
            else
                Box.Visible = false
                BoxFilled.Visible = false
                HealthBar.Visible = false
                Tracer.Visible = false
                Box.Color = _G.boxColor
                BoxFilled.Color = _G.boxFilledColor
                Tracer.Color = _G.TracerColor
                skel_settings.skelvi = false
            end
        else
            Box.Visible = false
            BoxFilled.Visible = false
            HealthBar.Visible = false
            Tracer.Visible = false
            skel_settings.skelvi = false
        end
    end)
end

for _, player in pairs(game.Players:GetChildren()) do
    setupPlayerBox(player)
end

game.Players.PlayerAdded:Connect(function(player)
    setupPlayerBox(player)
end)

local Window = Rayfield:CreateWindow({
    Name = "BNT ESP",
    Icon = 0,
    LoadingTitle = "By Bomzinho",
    LoadingSubtitle = "Loading....",
    Theme = "Amethyst",

    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,

    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "ESPP"
    },

    Discord = {
        Enabled = false,
        Invite = "",
        RememberJoins = true
    },

    KeySystem = true,
    KeySettings = {
        Title = "BNT ESP",
        Subtitle = "Key System",
        Note = "No method of obtaining the key is provided",
        FileName = "Key",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"4321", "1234"}
    }
})

local Tab1 = Window:CreateTab("Aimbot", 4483362458)

local Tab = Window:CreateTab("ESP", 4483362458)

local Label = Tab:CreateLabel("Geral KeySettings", 4483362458, Color3.fromRGB(0, 0, 0), false)

local Toggle = Tab:CreateToggle({
    Name = "Show Box",
    CurrentValue = false,
    Flag = "Show Box",
    Callback = function(Value)
        _G.boxVisible = Value
    end,
})

local Toggle2 = Tab:CreateToggle({
    Name = "Box Filled",
    CurrentValue = false,
    Flag = "BoxFilled",
    Callback = function(Value)
        _G.boxFilledVisible = Value
    end,
})

local Toggle3 = Tab:CreateToggle({
    Name = "Show Health Bar",
    CurrentValue = false,
    Flag = "healthbarouf",
    Callback = function(Value)
        _G.HealthBarVisible = Value
    end,
})

local Toggle4 = Tab:CreateToggle({
    Name = "Health Bar Filled",
    CurrentValue = false,
    Flag = "healthbarouff",
    Callback = function(Value)
        _G.HealthBarFilled = Value
    end,
})

local Toggle7 = Tab:CreateToggle({
    Name = "Show Tracer",
    CurrentValue = false,
    Flag = "TracerVisible",
    Callback = function(Value)
        _G.TracerVisible = Value
    end,
})

local ToggleSKVI = Tab:CreateToggle({
    Name = "Show Skeletons",
    CurrentValue = false,
    Flag = "SKVI",
    Callback = function(Value)
        skel_settings.skelvi = Value
    end,
})

local Toggle5 = Tab:CreateToggle({
    Name = "Teamcheck",
    CurrentValue = false,
    Flag = "teamcheck",
    Callback = function(Value)
        _G.teamcheck = Value
    end,
})

local Label1 = Tab:CreateLabel("Color Settings", 4483362458, Color3.fromRGB(0, 0, 0), false)

local ColorPicker1 = Tab:CreateColorPicker({
    Name = "Team Color",
    Color = Color3.fromRGB(0, 255, 0),
    Flag = "teamcolor",
    Callback = function(Value)
        _G.teamcolor = Value
    end
})

local ColorPicker2 = Tab:CreateColorPicker({
    Name = "Enemy Color",
    Color = Color3.fromRGB(255, 0, 0),
    Flag = "enemycolor",
    Callback = function(Value)
        _G.enemycolor = Value
    end
})

local ColorPicker3 = Tab:CreateColorPicker({
    Name = "Box Color",
    Color = Color3.fromRGB(255, 255, 255),
    Flag = "boxColor",
    Callback = function(Value)
        _G.boxColor = Value
    end
})

local ColorPicker4 = Tab:CreateColorPicker({
    Name = "Box Filled Color",
    Color = Color3.fromRGB(255, 255, 255),
    Flag = "boxFilledColor",
    Callback = function(Value)
        _G.boxFilledColor = Value
    end
})

local ColorPicker5 = Tab:CreateColorPicker({
    Name = "Tracer Color",
    Color = Color3.fromRGB(255, 255, 255),
    Flag = "TracerColor",
    Callback = function(Value)
        _G.TracerColor = Value
    end
})

local ColorPickerSKCOLOR = Tab:CreateColorPicker({
    Name = "Skeleton Color",
    Color = Color3.fromRGB(255, 255, 255),
    Flag = "SKCOLOR",
    Callback = function(Value)
        skel_settings.color = Value
    end
})

local Label2 = Tab:CreateLabel("Transparency Settings", 4483362458, Color3.fromRGB(0, 0, 0), false)

local Slider1 = Tab:CreateSlider({
    Name = "Box Transparency",
    Range = {0, 1},
    Increment = .05,
    Suffix = "",
    CurrentValue = 1,
    Flag = "boxTransparency",
    Callback = function(Value)
        _G.boxTransparency = Value
    end,
})

local Slider2 = Tab:CreateSlider({
    Name = "Box Filled Transparency",
    Range = {0, 1},
    Increment = .05,
    Suffix = "",
    CurrentValue = 1,
    Flag = "boxFilledTransparency",
    Callback = function(Value)
        _G.boxFilledTransparency = Value
    end,
})

local Slider3 = Tab:CreateSlider({
    Name = "Health Bar Transparency",
    Range = {0, 1},
    Increment = .05,
    Suffix = "",
    CurrentValue = 1,
    Flag = "HealthBarTransparency",
    Callback = function(Value)
        _G.HealthBarTransparency = Value
    end,
})

local Slider4 = Tab:CreateSlider({
    Name = "Tracer Transparency",
    Range = {0, 1},
    Increment = .05,
    Suffix = "",
    CurrentValue = 1,
    Flag = "TracerTransparency",
    Callback = function(Value)
        _G.TracerTransparency = Value
    end,
})

local SliderSKTRANSPA = Tab:CreateSlider({
    Name = "Skeleton Transparency",
    Range = {0, 1},
    Increment = .05,
    Suffix = "",
    CurrentValue = 1,
    Flag = "SKTRANSPA",
    Callback = function(Value)
        skel_settings.transparency = Value
    end,
})

local Label3 = Tab:CreateLabel("Thickness Settings", 4483362458, Color3.fromRGB(0, 0, 0), false)

local Slider5 = Tab:CreateSlider({
    Name = "Box Thickness",
    Range = {0, 10},
    Increment = .05,
    Suffix = "",
    CurrentValue = 1,
    Flag = "boxThickness",
    Callback = function(Value)
        _G.boxThickness = Value
    end,
})

local Slider6 = Tab:CreateSlider({
    Name = "Health Bar Thickness",
    Range = {0, 10},
    Increment = .05,
    Suffix = "",
    CurrentValue = 1,
    Flag = "HealthBarThickness",
    Callback = function(Value)
        _G.HealthBarThickness = Value
    end,
})

local Slider7 = Tab:CreateSlider({
    Name = "Tracer Thickness",
    Range = {0, 10},
    Increment = .05,
    Suffix = "",
    CurrentValue = 1,
    Flag = "TracerThickness",
    Callback = function(Value)
        _G.TracerThickness = Value
    end,
})

local SliderSKTHICK = Tab:CreateSlider({
    Name = "Skeleton Thickness",
    Range = {0, 10},
    Increment = .05,
    Suffix = "",
    CurrentValue = 1.5,
    Flag = "SKTHICK",
    Callback = function(Value)
        skel_settings.thickness = Value
    end,
})

local Label4 = Tab:CreateLabel("Other Settings", 4483362458, Color3.fromRGB(0, 0, 0), false)

local Dropdown1 = Tab:CreateDropdown({
    Name = "Teamcheck Mode",
    Options = {"colors", "invisible"},
    CurrentOption = {"colors"},
    MultipleOptions = false,
    Flag = "TeamcheckMode",
    Callback = function(Options)
        _G.temcheckmode = Options[1]
    end,
})

local Dropdown2 = Tab:CreateDropdown({
    Name = "Health Bar Position",
    Options = {"Left", "Right"},
    CurrentOption = {"Left"},
    MultipleOptions = false,
    Flag = "HealthBarPosition",
    Callback = function(Options)
        _G.HealthBarPosition = Options[1]
    end,
})

local Dropdown3 = Tab:CreateDropdown({
    Name = "Tracer From",
    Options = {"Bottom", "Middle", "Top"},
    CurrentOption = {"Bottom"},
    MultipleOptions = false,
    Flag = "TracerFrom",
    Callback = function(Options)
        _G.TracerFrom = Options[1]
    end,
})

Rayfield:LoadConfiguration()
